<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DevComponents.WpfRibbon</name>
    </assembly>
    <members>
        <member name="T:DevComponents.WpfRibbon.Backstage">
            <summary>
            Represents Office style Backstage application menu control.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.Backstage.EffectiveStyleProperty">
            <summary>
            Identifies EffectiveStyle property.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.Backstage.ContentBackgroundProperty">
            <summary>
            Identifies ContentBackground property.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.Backstage.ContentBorderBrushProperty">
            <summary>
            Identifies ContentBorderBrush property.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.Backstage.ContentInnerBorderBrushProperty">
            <summary>
            Identifies ContentInnerBorderBrush property.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.Backstage.ContentBorderThicknessProperty">
            <summary>
            Identifies ContentBorderThickness property.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.Backstage.TabStripMinWidthProperty">
            <summary>
            Identifies the TabStripMinWidth property.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.Backstage.SelectedPanelEffectiveBackgroundImageProperty">
            <summary>
            Identifies SelectedPanelEffectiveBackgroundImage property.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.Backstage.EffectiveStyle">
            <summary>
            Gets the effective ribbon style.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.Backstage.ContentBackground">
            <summary>
            Gets or sets the background of the tab content.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.Backstage.ContentBorderBrush">
            <summary>
            Gets or sets the border brush for the tab item content.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.Backstage.ContentInnerBorderBrush">
            <summary>
            Gets or sets the inner border brush for the tab item content.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.Backstage.ContentBorderThickness">
            <summary>
            Gets or sets the tab content border thickness.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.Backstage.TabStripMinWidth">
            <summary>
            Gets or sets minimum width of backstage tab-strip.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.Backstage.SelectedPanelEffectiveBackgroundImage">
            <summary>
            Gets the effective selected panel backgruond image.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.Backstage.ButtonStyleKey">
            <summary>
            Gets the resource key for Button control when on Backstage tab.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.Backstage.ButtonDropDownStyleKey">
            <summary>
            Gets the resource key for ButtonDropDown control when on Backstage tab.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.BackstageTab.EffectiveStyleProperty">
            <summary>
            Identifies EffectiveStyle property.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.BackstageTab.PanelBackgroundProperty">
            <summary>
            Identifies PanelBackground property.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.BackstageTab.PanelBackgroundImageProperty">
            <summary>
            Identifies PanelBackgroundImage property.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.BackstageTab.EffectiveBackgroundImageProperty">
            <summary>
            Identifies EffectiveBackgroundImage property.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.BackstageTab.TabToolTipProperty">
            <summary>
            Identifies TabToolTip property.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.BackstageTab.TabContextMenuProperty">
            <summary>
            Identifies TabContextMenu property.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.BackstageTab.InnerBorderBrushProperty">
            <summary>
            Identifies InnerBorderBrush property.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.BackstageTab.InnerBorderThicknessProperty">
            <summary>
            Identifies InnerBorderThickness property.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.BackstageTab.EffectiveStyle">
            <summary>
            Gets the effective ribbon style.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.BackstageTab.PanelBackground">
            <summary>
            Gets or sets the predefined background for tab panel that is displayed in lower-right corner.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.BackstageTab.PanelBackgroundImage">
            <summary>
            Gets or sets custom background image that is displayed by default on the bottom-right corner of the tab panel.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.BackstageTab.EffectiveBackgroundImage">
            <summary>
            Gets the effective panel background image.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.BackstageTab.TabToolTip">
            <summary>
            Gets or sets the tooltip for the tab.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.BackstageTab.TabContextMenu">
            <summary>
            Gets or sets the context menu of the tab that should appear whenever the context menu is requested through user interface (UI).
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.BackstageTab.InnerBorderBrush">
            <summary>
            Gets or sets the brush for the inner border of the tab.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.BackstageTab.InnerBorderThickness">
            <summary>
            Gets or sets the inner border thickness.
            </summary>
        </member>
        <member name="M:DevComponents.WpfRibbon.HslColor.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:DevComponents.WpfRibbon.HslColor.#ctor(System.Double,System.Double,System.Double)">
            <summary>
            Construct with values for h, s and v.
            </summary>
        </member>
        <member name="M:DevComponents.WpfRibbon.HslColor.ToRgb">
            <summary>
            Convert the instance of HsvColor to an instance of Color.
            </summary>
        </member>
        <member name="M:DevComponents.WpfRibbon.HslColor.FromRgb(System.Windows.Media.Color)">
            <summary>
            Convert a standard Color to an HsvColor
            </summary>
        </member>
        <member name="M:DevComponents.WpfRibbon.HslColor.FromRgb(System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates an HsvColor instance from provided RGB values.
            </summary>
        </member>
        <member name="M:DevComponents.WpfRibbon.HslColor.ToRgb(System.Double,System.Double,System.Double)">
            <summary>
            Creates a Color from provided HSV values. h is between 0 and 360, s and l are between 0 and 1.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.HslColor.H">
            <summary>
            Get or set the Hue component of the color. This is a value from 0 to 360.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.HslColor.S">
            <summary>
            Get or set the Saturation component of the color. This is a value from 0 to 1.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.HslColor.L">
            <summary>
            Get or set the Value component of the color. This is a value from 0 to 1.
            </summary>
        </member>
        <member name="T:DevComponents.WpfRibbon.HsvColor">
            <summary>
            Encapsulate an HSV color structure, supporting conversion methods to and from the standard Rgb based Color.
            This class is inspired by and all the code for the conversion methods is copied from the ColorPicker sample found in the Windows SDK.
            http://msdn.microsoft.com/en-us/library/ms771620.aspx
            </summary>
        </member>
        <member name="M:DevComponents.WpfRibbon.HsvColor.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:DevComponents.WpfRibbon.HsvColor.#ctor(System.Double,System.Double,System.Double)">
            <summary>
            Construct with values for h, s and v.
            </summary>
        </member>
        <member name="M:DevComponents.WpfRibbon.HsvColor.ToRgb">
            <summary>
            Convert the instance of HsvColor to an instance of Color.
            </summary>
        </member>
        <member name="M:DevComponents.WpfRibbon.HsvColor.FromRgb(System.Windows.Media.Color)">
            <summary>
            Convert a standard Color to an HsvColor
            </summary>
        </member>
        <member name="M:DevComponents.WpfRibbon.HsvColor.FromRgb(System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates an HsvColor instance from provided RGB values.
            </summary>
        </member>
        <member name="M:DevComponents.WpfRibbon.HsvColor.ToRgb(System.Double,System.Double,System.Double)">
            <summary>
            Creates a Color from provided HSV values.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.HsvColor.H">
            <summary>
            Get or set the Hue component of the color. This is a value from 0 to 360.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.HsvColor.S">
            <summary>
            Get or set the Saturation component of the color.  This is a value from 0 to 1.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.HsvColor.V">
            <summary>
            Get or set the Value component of the color. This is a value from 0 to 1.
            </summary>
        </member>
        <member name="T:DevComponents.WpfRibbon.Office2013ThemeSeed">
            <summary>
            A wrapper for the Canvas and Base colors used in generating Metro colors, with a display name for UI.
            </summary>
        </member>
        <member name="M:DevComponents.WpfRibbon.Office2013ThemeSeed.#ctor(System.String,System.String,System.String)">
            <summary>
            Construct using standard color strings for defining canvas and base colors.
            </summary>
        </member>
        <member name="M:DevComponents.WpfRibbon.Office2013ThemeSeed.#ctor(System.Windows.Media.Color,System.Windows.Media.Color,System.String)">
            <summary>
            Construct with canvas and base colors along with the display name for this theme.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.Office2013ThemeSeed.DisplayName">
            <summary>
            Access the display name.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.Office2013ThemeSeed.BaseColor">
            <summary>
            Gets or sets the "Base" color used to generate Metro colors.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.Office2013ThemeSeed.CanvasColor">
            <summary>
            Gets or sets the "Canvas" color used to generate Metro colors.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.Office2013ThemeSeed.PreDefinedThemes">
            <summary>
            Return a list of the pre-defined Office2013ThemeSeeds
            </summary>
        </member>
        <member name="T:DevComponents.WpfRibbon.Office2016ThemeSeed">
            <summary>
            A wrapper for the Canvas and Base colors used in generating Office 2016 colors, with a display name for UI.
            </summary>
        </member>
        <member name="M:DevComponents.WpfRibbon.Office2016ThemeSeed.#ctor(System.String,System.String,System.String)">
            <summary>
            Construct using standard color strings for defining canvas and base colors.
            </summary>
        </member>
        <member name="M:DevComponents.WpfRibbon.Office2016ThemeSeed.#ctor(System.Windows.Media.Color,System.Windows.Media.Color,System.String)">
            <summary>
            Construct with canvas and base colors along with the display name for this theme.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.Office2016ThemeSeed.DisplayName">
            <summary>
            Access the display name.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.Office2016ThemeSeed.BaseColor">
            <summary>
            Gets or sets the "Base" color used to generate Metro colors.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.Office2016ThemeSeed.CanvasColor">
            <summary>
            Gets or sets the "Canvas" color used to generate Metro colors.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.Office2016ThemeSeed.PreDefinedThemes">
            <summary>
            Return a list of the pre-defined Office2013ThemeSeeds
            </summary>
        </member>
        <member name="T:DevComponents.WpfRibbon.RibbonBar">
            <summary>
            Represents the RibbonBar control.
            </summary>
        </member>
        <member name="T:DevComponents.WpfRibbon.HeaderedPopupControl">
            <summary>
            Represents the popup control that has header and content parts.
            </summary>
        </member>
        <member name="T:DevComponents.WpfRibbon.BasePopupControl">
            <summary>
            Defines the base popup control that provides necessary facilities for hosting the drop-down buttons and Popups.
            </summary>
        </member>
        <member name="M:DevComponents.WpfRibbon.IPopupParentControl.QueryMouseCapturePopupClose(System.Windows.DependencyObject)">
            <summary>
            Gets whether popup will close because of source object taking the mouse capture.
            </summary>
            <param name="sourceObject">Object that captured the mouse.</param>
            <returns>True if popup can be closed, otherwise false.</returns>
        </member>
        <member name="P:DevComponents.WpfRibbon.IPopupParentControl.IsPopupMode">
            <summary>
            Gets or sets whether parent popup control is in popup mode.
            </summary>
        </member>
        <member name="M:DevComponents.WpfRibbon.BasePopupControl.#ctor">
            <summary>
            Initializes a new instance of the class.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.HeaderedPopupControl.HeaderProperty">
            <summary>
            Gets or sets the header of the control.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.HeaderedPopupControl.HeaderTemplateProperty">
            <summary>
            Gets or sets the template used to display the contents of the control's header.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.HeaderedPopupControl.HeaderTemplateSelectorProperty">
            <summary>
            Identifies the HeaderTemplateSelector Property.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.HeaderedPopupControl.Header">
            <summary>
            Gets or sets the item that labels the control.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.HeaderedPopupControl.HeaderTemplate">
            <summary>
            Template used to display the content of the control's header. 
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.HeaderedPopupControl.HeaderTemplateSelector">
            <summary>
            Enables the application writer to provide custom logic for choosing the template used to display the Header. 
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.HeaderedPopupControl.HasHeader">
            <summary>
            Gets whether control has header defined.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.RibbonBar.VisualStyleProperty">
            <summary>
            Identifies VisualStyle property. VisualStyle should never be set on this control rather on Ribbon control only.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.RibbonBar.EffectiveStyleProperty">
            <summary>
            Identifies EffectiveStyle property.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.RibbonBar.LaunchDialogEvent">
            <summary>
            Occurs when dialog launcher button in title bar is clicked. Use DialogLauncherVisible property to show the button in title bar.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.RibbonBar.DialogLauncherVisibleProperty">
            <summary>
            Gets or sets whether dialog launcher button is visible. Default value is Visibility.Visible
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.RibbonBar.IsAutoSizeEnabledProperty">
            <summary>
            Identifies the IsAutoSizeEnabled property.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.RibbonBar.ResizeOrderIndexProperty">
            <summary>
            Specifies the resize order index for the control.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.RibbonBar.CollapsedImageProperty">
            <summary>
            Specifies image that is displayed when control is collapsed.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.RibbonBar.MinAutoSizeHintProperty">
            <summary>
            Gets or sets the value that indicates the content part of the child item.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.RibbonBar.CollapsedHeaderProperty">
            <summary>
            Defines the CollapsedHeader property.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.RibbonBar.CollapsedStateChangedEvent">
            <summary>
            Identifies CollapsedStateChanged event.
            </summary>
        </member>
        <member name="M:DevComponents.WpfRibbon.RibbonBar.OnCollapsedStateChanged">
            <summary>
            Raises CollapsedStateChanged event.
            </summary>
        </member>
        <member name="M:DevComponents.WpfRibbon.RibbonBar.OnLaunchDialog">
            <summary>
            Raises LaunchDialog event.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.RibbonBar.DialogLauncherToolTipProperty">
            <summary>
            Identifies DialogLauncherToolTip property.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.RibbonBar.VisualStyle">
            <summary>
            Gets or sets effective VisualStyle. Note that this property must be set on Ribbon control.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.RibbonBar.EffectiveStyle">
            <summary>
            Gets the effective ribbon style.
            </summary>
        </member>
        <member name="E:DevComponents.WpfRibbon.RibbonBar.CollapsedStateChanged">
            <summary>
            Occurs when RibbonBar collapsed state has changed. You can use IsCollapsed property to check whether RibbonBar is collapsed or not.
            </summary>
        </member>
        <member name="E:DevComponents.WpfRibbon.RibbonBar.LaunchDialog">
            <summary>
            Occurs when dialog launcher button in title bar is clicked. Use DialogLauncherVisible property to show the button in title bar.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.RibbonBar.ResizeOrderIndex">
            <summary>
            Gets or sets the resize order index for the control. When control is inside of the RibbonBarPanel and panel
            cannot fit the all the controls, each control is attempted to be reduced in size and the order in which this is performed
            is controlled by the value of this property. Resizing starts with the control with the highest value for the ResizeOrderIndex property.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.RibbonBar.DialogLauncherVisible">
            <summary>
            Gets or sets the visibility of dialog launcher button. Default value is Visible.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.RibbonBar.DialogLauncherToolTip">
            <summary>
            Gets or sets the tooltip for Dialog Launcher button.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.RibbonBar.IsCollapsed">
            <summary>
            Gets whether RibbonBar is collapsed.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.RibbonBar.CollapsedImage">
            <summary>
            Gets or sets the image that is displayed when control is collapsed.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.RibbonBar.CollapsedHeader">
            <summary>
            Gets or sets the header (text) that is displayed when control is collapsed.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.RibbonBar.IsAutoSizeEnabled">
            <summary>
            Gets or sets whether the automatic ribbon bar sizing is enabled. Default value is true. Setting this property to false
            will allow ribbon bar to go to or from collapsed mode depending on available size instead of gradually resizing the
            buttons contained inside of the ribbon bar.
            </summary>
        </member>
        <member name="T:DevComponents.WpfRibbon.AdvWindow">
            <summary>
            Provides an advanced high-performance Window implementation which allows complete window styling including the system (non-client) are of the Window.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.AdvWindow.VisualStyleProperty">
            <summary>
            Identifies VisualStyle property. VisualStyle should never be set on this control rather on Ribbon control only.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.AdvWindow.EffectiveStyleProperty">
            <summary>
            Identifies EffectiveStyle property.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.AdvWindow.CloseWindow">
            <summary>
            Defines the system routed command that closes the window. This simulates closing of the window using the title bar button.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.AdvWindow.MinimizeWindow">
            <summary>
            Defines the system routed command that minimizes the window. This simulates minimizing of the window using the title bar button.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.AdvWindow.MaximizeWindow">
            <summary>
            Defines the system routed command that maximizes the window. This simulates maximizing of the window using the title bar button.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.AdvWindow.RestoreWindow">
            <summary>
            Defines the system routed command that restores the window from maximized to normal state. This simulates restore of the window using the title bar button.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.AdvWindow.EnableSystemCaptionMenuProperty">
            <summary>
            Identifies EnableSystemCaptionMenu Property.
            </summary>
        </member>
        <member name="M:DevComponents.WpfRibbon.AdvWindow.#ctor">
            <summary>
            Initializes a new instance of the AdvWindow class.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.AdvWindow.VisualStyle">
            <summary>
            Gets or sets effective VisualStyle. Note that this property must be set on Ribbon control.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.AdvWindow.EffectiveStyle">
            <summary>
            Gets the effective ribbon style.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.AdvWindow.EnableSystemCaptionMenu">
            <summary>
            Gets or sets whether system window context menu is shown when caption is right-clicked or window icon is clicked. Default value is true.
            </summary>
        </member>
        <member name="T:DevComponents.WpfRibbon.ApplicationMenu">
            <summary>
            Represents the Office 2007 Style Application Menu displayed in the Ribbon top-left corner.
            </summary>
        </member>
        <member name="T:DevComponents.WpfRibbon.ButtonDropDown">
            <summary>
            Represents the drop-down button.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.ButtonDropDown.WrapLabelImagePaddingProperty">
            <summary>
            Identifies WrapLabelImagePadding property.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.ButtonDropDown.VisualStyleProperty">
            <summary>
            Identifies VisualStyle property. VisualStyle should never be set on this control rather on Ribbon control only.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.ButtonDropDown.EffectiveStyleProperty">
            <summary>
            Identifies EffectiveStyle property.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.ButtonDropDown.ContentExpandsProperty">
            <summary>
            Gets or sets whether content part of the button is included in expand part when button role is split button and image is assigned to the button.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.ButtonDropDown.IsPressedProperty">
            <summary>
            Indicates whether button is pressed.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.ButtonDropDown.IsPopupOpenProperty">
            <summary>
            Indicates whether popup is open.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.ButtonDropDown.RoleProperty">
            <summary>
            Indicates the button role, whether button is split button, drop down button etc.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.ButtonDropDown.PartVisibilityProperty">
            <summary>
            Indicates the button part visiblity.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.ButtonDropDown.FocusChangeKeepsPopupOpenProperty">
            <summary>
            Identifies the FocusChangeKeepsPopupOpen property.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.ButtonDropDown.ColorClassProperty">
            <summary>
            Identifies the ColorClass property.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.ButtonDropDown.IsHighlightedProperty">
            <summary>
            Indicates whether button is highlighted, mouse over the button.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.ButtonDropDown.IsCheckableProperty">
            <summary>
            Indicates whether button can be in checked state.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.ButtonDropDown.IsCheckedProperty">
            <summary>
            Indicates whether button is checked.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.ButtonDropDown.ImageProperty">
            <summary>
            Indicates the image displayed on the button.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.ButtonDropDown.ImageSmallProperty">
            <summary>
            Indicates the small image displayed on the button.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.ButtonDropDown.UseSmallImageProperty">
            <summary>
            Indicates that button should use image specified by the ImageSmall property.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.ButtonDropDown.RenderImageProperty">
            <summary>
            Internal property which indicates the active image for rendering.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.ButtonDropDown.WrapLabelProperty">
            <summary>
            Indicates whether text label assigned to the Header is wrapped. Applies only to string type assigned to the Header.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.ButtonDropDown.InlineExpandProperty">
            <summary>
            Indicates whether expand sign is included in the same area as Header text. Applies only when expand sign is displayed on bottom and Header has string type assigned.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.ButtonDropDown.ImagePositionProperty">
            <summary>
            Indicates the image position inside of the button in relation to the text.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.ButtonDropDown.ExpandPositionProperty">
            <summary>
            Indicates the alignment of the expand part which popups up the menu when clicked.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.ButtonDropDown.StaysOpenOnClickProperty">
            <summary>
            Indicates whether popup button is on stays open when button is clicked.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.ButtonDropDown.IsSelectedProperty">
            <summary>
            Indicates whether button is expanded, displaying a popup.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.ButtonDropDown.PopupPlacementProperty">
            <summary>
            Indicates the placement of the popup.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.ButtonDropDown.PopupPlacementTargetProperty">
            <summary>
            Identifies the PopupPlacementTarget property.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.ButtonDropDown.IsPopupAnimationSuspendedProperty">
            <summary>
            Indicates whether popup animation is suspended.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.ButtonDropDown.InputGestureTextProperty">
            <summary>
            Indicates the text describing an input gesture that will call the command tied to the specified item, for example Ctrl+C for the Copy command. Default value is an empty string. 
            This property does not associate the input gesture with the button it simply adds specified text to the button. For information on how to associate a command with a button see Command property.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.ButtonDropDown.IsExpandVisibleProperty">
            <summary>
            Internal property which indicates whether expand part is visible.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.ButtonDropDown.IsSimpleHeaderProperty">
            <summary>
            Internal property which indicates whether string type is assigned to the header.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.ButtonDropDown.ExpandVisibilityProperty">
            <summary>
            Indicates the expand sign visibility.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.ButtonDropDown.PopupTypeProperty">
            <summary>
            Indicates the type of the popup displayed by the button.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.ButtonDropDown.ClickEvent">
            <summary>
            Occurs when button is clicked.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.ButtonDropDown.PopupOpenedEvent">
            <summary>
            Occurs when popup is opened.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.ButtonDropDown.PopupClosedEvent">
            <summary>
            Occurs when popup is closed.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.ButtonDropDown.CheckedEvent">
            <summary>
            Occurs when button is Checked.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.ButtonDropDown.UncheckedEvent">
            <summary>
            Occurs when button is unchecked.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.ButtonDropDown.CommandProperty">
            <summary>
            Indicates the command to invoke when this button is pressed. 
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.ButtonDropDown.CommandParameterProperty">
            <summary>
            Indicates  the parameter to pass to the Command property. 
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.ButtonDropDown.CommandTargetProperty">
            <summary>
            Indicates the element on which to raise the specified command.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.ButtonDropDown.CornerRadiusProperty">
            <summary>
            Identifies the CornerRadius property.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.ButtonDropDown.OptionGroupProperty">
            <summary>
            Identifies the OptionGroup property.
            </summary>
        </member>
        <member name="M:DevComponents.WpfRibbon.ButtonDropDown.#ctor">
            <summary>
            Initializes new instance of the class.
            </summary>
        </member>
        <member name="M:DevComponents.WpfRibbon.ButtonDropDown.OnApplyTemplate">
            <summary>
            Called when ApplyTemplate is called and returns true.
            </summary>
        </member>
        <member name="M:DevComponents.WpfRibbon.ButtonDropDown.SetPopupMode(System.Boolean)">
            <summary>
            Puts the parent control into the popup mode which captures the mouse input.
            </summary>
            <param name="popupMode">Indicates whether popup mode is active.</param>
        </member>
        <member name="M:DevComponents.WpfRibbon.ButtonDropDown.GetPopupParent">
            <summary>
            Returns the parent of the button.
            </summary>
            <returns>Button parent.</returns>
        </member>
        <member name="M:DevComponents.WpfRibbon.ButtonDropDown.GetParent">
            <summary>
            Returns the parent of the button.
            </summary>
            <returns>Button parent.</returns>
        </member>
        <member name="M:DevComponents.WpfRibbon.ButtonDropDown.OpenPopup">
            <summary>
            Opens the popup and returns whether popup was opened.
            </summary>
            <returns>true if popup is opened or false if popup was already open.</returns>
        </member>
        <member name="M:DevComponents.WpfRibbon.ButtonDropDown.UpdatePopupPlacement">
            <summary>
            Updates the popup placement before popup is displayed.
            </summary>
        </member>
        <member name="M:DevComponents.WpfRibbon.ButtonDropDown.UpdateOptionGroupState">
            <summary>
            Assumes this buttons IsChecked property is true.
            </summary>
        </member>
        <member name="M:DevComponents.WpfRibbon.ButtonDropDown.OnChecked(System.Windows.RoutedEventArgs)">
            <summary>
            Raises the Checked event.
            </summary>
            <param name="e">Routed event arguments.</param>
        </member>
        <member name="M:DevComponents.WpfRibbon.ButtonDropDown.OnUnchecked(System.Windows.RoutedEventArgs)">
            <summary>
            Raises the Unchecked event.
            </summary>
            <param name="e">Event arguments.</param>
        </member>
        <member name="F:DevComponents.WpfRibbon.ButtonDropDown.ImageSourceProperty">
            <summary>
            Identifies the ImageSource property.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.ButtonDropDown.ImageSmallSourceProperty">
            <summary>
            Identifies ImageSmallSource property.
            </summary>
        </member>
        <member name="M:DevComponents.WpfRibbon.ButtonDropDown.Copy(System.Boolean)">
            <summary>
            Makes a copy of the object. Note that only properties and events defined by the ButtonDropDown are copied. No inherited properties are copied.
            </summary>
            <returns>New instance of the object.</returns>
        </member>
        <member name="M:DevComponents.WpfRibbon.ButtonDropDown.UpdateCanExecute">
            <summary>
            Called when CanExecute property needs to be update to indicate whether command attached to the button can be executed.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.ButtonDropDown.RecognizesAccessKey">
            <summary>
            Indicates whether button Header content recognizes access key, an underscore character before the letter which is used to indicate access key. Default value is true.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.ButtonDropDown.WrapLabelImagePadding">
            <summary>
            Gets or sets the amount of padding added to image width when auto-text wrapping is performed when WrapLabel=true. Default value is 8. If you have words
            that exceed image width you should increase the value of this property so complete word can be fitted under the image.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.ButtonDropDown.VisualStyle">
            <summary>
            Gets or sets effective VisualStyle. Note that this property must be set on Ribbon control.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.ButtonDropDown.EffectiveStyle">
            <summary>
            Gets the effective ribbon style.
            </summary>
        </member>
        <member name="E:DevComponents.WpfRibbon.ButtonDropDown.Click">
            <summary>
            Represents the Click event.
            </summary>
        </member>
        <member name="E:DevComponents.WpfRibbon.ButtonDropDown.PopupOpened">
            <summary>
            Represents the PopupOpened event.
            </summary>
        </member>
        <member name="E:DevComponents.WpfRibbon.ButtonDropDown.PopupClosed">
            <summary>
            Represents the PopupClosed event.
            </summary>
        </member>
        <member name="E:DevComponents.WpfRibbon.ButtonDropDown.Checked">
            <summary>
            Represents the Checked event.
            </summary>
        </member>
        <member name="E:DevComponents.WpfRibbon.ButtonDropDown.Unchecked">
            <summary>
            Represents the Unchecked event.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.ButtonDropDown.RaiseLivePreview">
            <summary>
            Gets whether LivePreview events are raised.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.ButtonDropDown.IsPressed">
            <summary>
            Gets whether mouse button is pressed over the button.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.ButtonDropDown.Role">
            <summary>
            Gets or sets the button role. For example button in role of split button has two part, the command part which generates the Click event
            and/or executes the command and drop-down part which shows the button child items on popup menu. Drop-down button role is a button which when clicked anywhere
            within button bounds shows the child items on popup menu. Default value is SplitButton.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.ButtonDropDown.PartVisibility">
            <summary>
            Gets or sets the button part visibility. Default setting indicates that both Header and Image are visible if specified.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.ButtonDropDown.PopupType">
            <summary>
            Gets or sets the drop-down type displayed by button. Default value indicates default popup. You can choose to use menu popup style which also makes
            all child ButtonDropDown controls assume the special menu appearance.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.ButtonDropDown.PopupPlacement">
            <summary>
            Gets or sets the placement of the button popup. Default value indicates that popup placement is automatically managed.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.ButtonDropDown.PopupPlacementTarget">
            <summary>
            Gets or sets the element relative to which the Popup is positioned when it opens.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.ButtonDropDown.IsSimpleHeader">
            <summary>
            Gets whether string type only has been assigned to the Header property.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.ButtonDropDown.IsExpandVisible">
            <summary>
            Gets whether the Expand sign of the button is visible.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.ButtonDropDown.ExpandVisibility">
            <summary>
            Gets or sets the visibility of the expand sign. Default value indicates that visibility is automatically managed by the button.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.ButtonDropDown.ContentExpands">
            <summary>
            Gets or sets whether content part of the button is included in expand part when button role is split button and image is assigned to the button.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.ButtonDropDown.Popup">
            <summary>
            Gets the refernce to the internal popup control that you can use to custom position the popup or change other properties on Popup control.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.ButtonDropDown.HighlightedChild">
            <summary>
            Tracks currently highlighted child button.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.ButtonDropDown.IsPopupOpen">
            <summary>
            Gets or sets whether button popup is open.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.ButtonDropDown.IsCheckable">
            <summary>
            Indicates whether button Checked property will revert its value when button is clicked.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.ButtonDropDown.IsChecked">
            <summary>
            Gets or sets whether button is checked.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.ButtonDropDown.ExpandPosition">
            <summary>
            Gets or sets the Expand part position. Default value displays expand part on right side of the button.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.ButtonDropDown.WrapLabel">
            <summary>
            Gets or sets whether text, string type, assigned to the Header is automatically wrapped by the control. Does not apply to any other type assigned to the Header control. Default value is true.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.ButtonDropDown.InlineExpand">
            <summary>
            Gets or sets whether expand sign is included in the same line as Header text. Applies only when expand sign is displayed on bottom and Header has string type assigned.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.ButtonDropDown.FocusChangeKeepsPopupOpen">
            <summary>
            Gets or sets whether popup is left open when input focus changes. Default value is false which indicates that
            popup will close when focus is changed. By default the button will receive input focus after popup is open and it will
            close the popup if another control gains input focus and button loses it. You can set this property to true to prevent
            popup from closing in that case. This might be needed if you host for example CheckBox control on the popup or some other
            control that gains input focus.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.ButtonDropDown.RenderImage">
            <summary>
            Gets the reference to the image that should be rendered on face of the button.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.ButtonDropDown.Image">
            <summary>
            Gets or sets the image displayed on the button.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.ButtonDropDown.ImageSource">
            <summary>
            Gets or sets the image source that is used as source for the image on the button. Setting this property overrides Image property setting.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.ButtonDropDown.ImageSmallSource">
            <summary>
            Gets or sets the source for small image variant displayed on the button when button is resized by the ribbon control to reduce its size. This property overrides the ImageSmall property setting.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.ButtonDropDown.ImageSmall">
            <summary>
            Gets or sets the small image variant displayed on the button when button is resized by the ribbon control to reduce its size.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.ButtonDropDown.UseSmallImage">
            <summary>
            Gets or sets whether image specified by ImageSmall property is used on face of the button. Default value is false.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.ButtonDropDown.ImagePosition">
            <summary>
            Gets or sets the image position in relation to the button header.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.ButtonDropDown.IsHighlighted">
            <summary>
            Gets whether the button is highlighted.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.ButtonDropDown.StaysOpenOnClick">
            <summary>
            Gets or sets whether popup button is on stays open when button is clicked. Default value is false.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.ButtonDropDown.IsPopupAnimationSuspended">
            <summary>
            Gets or sets whether popup animation is suspended.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.ButtonDropDown.InputGestureText">
            <summary>
            Gets or sets the text describing an input gesture that will call the command tied to the specified item, for example Ctrl+C for the Copy command. Default value is an empty string. 
            This property does not associate the input gesture with the button it simply adds specified text to the button. For information on how to associate a command with a button see Command property.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.ButtonDropDown.ColorClass">
            <summary>
            Gets or sets the color class for the border button. The color class is used to determine the colors that are automatically loaded from the application resources
            when the button state changes. Default value is RibbonColors.ButtonClass.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.ButtonDropDown.OptionGroup">
            <summary>
            Gets or set the Group item belongs to. The groups allows a user to choose from mutually exclusive options within the group. 
            The choice is reflected by IsChecked property. Buttons that belong to same group and same parent will have mutually exclusive
            IsChecked property similar to radio buttons functionality.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.ButtonDropDown.CornerRadius">
            <summary>
            Gets or sets the borders corner radius for the button. Default value is 2.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.ButtonDropDown.Command">
            <summary>
            Gets or sets the command associated with the button.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.ButtonDropDown.CommandParameter">
            <summary>
            Gets or sets a parameter of a Command object.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.ButtonDropDown.CommandTarget">
            <summary>
            Gets or sets the target element on which to raise the specified command. 
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.ApplicationMenu.ColorProperty">
            <summary>
            Identifies Color property.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.ApplicationMenu.BackstageUsesPopupProperty">
            <summary>
            Identifies BackstageUsesPopup property.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.ApplicationMenu.BackstageTabProperty">
            <summary>
            Identified BackstageTab property.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.ApplicationMenu.BackstageEnabledProperty">
            <summary>
            Identifies BackstageEnabled property.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.ApplicationMenu.IsBackstageActiveProperty">
            <summary>
            Identifies IsBackstageActive property.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.ApplicationMenu.MruItemsProperty">
            <summary>
            Identifies MruItems Property.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.ApplicationMenu.AppItemsProperty">
            <summary>
            Identifies the MruItems property.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.ApplicationMenu.HasMruItemsProperty">
            <summary>
            Identifies the HasMruItems property.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.ApplicationMenu.HasAppItemsProperty">
            <summary>
            Identifies the HasAppItems property.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.ApplicationMenu.MruItemTemplateProperty">
            <summary>
            Identifies the MruItemTemplate property.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.ApplicationMenu.AppItemTemplateProperty">
            <summary>
            Identifies the MruItemTemplate property.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.ApplicationMenu.MruItemTemplateSelectorProperty">
            <summary>
            Identifies the MruItemTemplateSelector property.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.ApplicationMenu.AppItemTemplateSelectorProperty">
            <summary>
            Identifies the AppItemTemplateSelector property.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.ApplicationMenu.DoubleClickCloseProperty">
            <summary>
            Identifies the DoubleClickClose property.
            </summary>
        </member>
        <member name="M:DevComponents.WpfRibbon.ApplicationMenu.#ctor">
            <summary>
            Initializes the new instance of the class.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.ApplicationMenu.Color">
            <summary>
            Gets or sets the pre-defined color for the application menu in Office 2010 style.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.ApplicationMenu.BackstageUsesPopup">
            <summary>
            Gets or sets whether Backstage is displayed on Popup instead of through WPF content overlay. Displaying Backstage on popup is advantageous
            if you use Windows Forms or any other Windowed content which would appear over the WPF content. Using Popup for backstage content does
            have interactivity limitations like menu being automatically closed if application becomes inactive, parent Window is resized or moved, etc.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.ApplicationMenu.BackstageTab">
            <summary>
            Gets or sets the control that is used as Backstage tab control. This should be set to an BackstageTab object which is provided for that.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.ApplicationMenu.BackstageEnabled">
            <summary>
            Gets or sets whether Backstage menu is enabled. BackstageTab must be set for menu to be enabled. Default value is true.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.ApplicationMenu.IsBackstageActive">
            <summary>
            Gets whether application menu will displays the Backstage style menu. The BackstageTab and BackstageEnabled properties must be set in order for Backstage to become active.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.ApplicationMenu.MruItems">
            <summary>
            Gets the reference to the collection of Most Recently Used items that are displayed on the application menu usually on the right side of the document commands.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.ApplicationMenu.AppItems">
            <summary>
            Gets the reference to the collection of Application items that are displayed on the bottom of application menu and usually include button to open Options dialog for an application and button to Exit application.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.ApplicationMenu.HasAppItems">
            <summary>
            Gets whether application menu has any Application Items defined in AppItems collection. You can use this property to for example conditionaly hide/show elements using XAML triggers.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.ApplicationMenu.HasMruItems">
            <summary>
            Gets whether application menu has any Most Recently Used Items defined in MruItems collection. You can use this property to for example conditionaly hide/show elements using XAML triggers.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.ApplicationMenu.MruItemTemplate">
            <summary>
            Gets or sets the template for each item in the MruItems collection.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.ApplicationMenu.AppItemTemplate">
            <summary>
            Gets or sets the template for each item in the AppItems collection.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.ApplicationMenu.MruItemTemplateSelector">
            <summary>
            Gets or sets the DataTemplateSelector which allows you to provide custom logic for choosing a template used to display each item.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.ApplicationMenu.AppItemTemplateSelector">
            <summary>
            Gets or sets the DataTemplateSelector which allows you to provide custom logic for choosing a template used to display each item.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.ApplicationMenu.DoubleClickClose">
            <summary>
            Gets or sets whether mouse double click over the application button will attempt to close the application. Default value is true.
            </summary>
        </member>
        <member name="T:DevComponents.WpfRibbon.ButtonBorder">
            <summary>
            Represents the Button border.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.ButtonBorder.BackgroundProperty">
            <summary>
            Identifies the Background property.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.ButtonBorder.TopHighlightProperty">
            <summary>
            Identifies the TopHighlight property.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.ButtonBorder.BottomHighlightProperty">
            <summary>
            Identifies the BottomHighlight property.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.ButtonBorder.BorderBrushProperty">
            <summary>
            Identifies the BorderBrush property.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.ButtonBorder.BorderThicknessProperty">
            <summary>
            Identifies the BorderThickness property.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.ButtonBorder.LightBorderBrushProperty">
            <summary>
            Identifies the LightBorderBrush property.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.ButtonBorder.PaddingProperty">
            <summary>
            Identifies the Padding property.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.ButtonBorder.CornerRadiusProperty">
            <summary>
            Identifies the CornerRadius property.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.ButtonBorder.ButtonStateProperty">
            <summary>
            Identifies the ButtonState property.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.ButtonBorder.ColorClassProperty">
            <summary>
            Identifies the ColorClass property.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.ButtonBorder.RenderBorderProperty">
            <summary>
            Identifies the RenderBorder property.
            </summary>
        </member>
        <member name="M:DevComponents.WpfRibbon.ButtonBorder.#ctor">
            <summary>
            Initializes a new instance of the ButtonBorder class.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.ButtonBorder.RenderBorder">
            <summary>
            Gets or sets whether border is rendered. Default value is true.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.ButtonBorder.ColorClass">
            <summary>
            Gets or sets the color class for the border button. The color class is used to determine the colors that are automatically loaded from the application resources
            when the ButtonState property changes. Default value is RibbonColors.ButtonClass.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.ButtonBorder.CornerRadius">
            <summary>
            Gets or sets the borders corner radius.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.ButtonBorder.ButtonState">
            <summary>
            Gets or sets the button rendering state. Rendering state change will cause the border to automatically pick the appropriate system colors from application resources.
            Default value is Normal.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.ButtonBorder.Background">
            <summary>
            Gets or sets the background brush.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.ButtonBorder.TopHighlight">
            <summary>
            Gets or sets the brush of the top highlight for the button background.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.ButtonBorder.BottomHighlight">
            <summary>
            Gets or sets the brush of the bottom highlight for the button background.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.ButtonBorder.BorderBrush">
            <summary>
            Gets or sets the border brush.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.ButtonBorder.LightBorderBrush">
            <summary>
            Gets or sets the light border brush used around the border.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.ButtonBorder.BorderThickness">
            <summary>
            Gets or sets the border thickness.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.ButtonBorder.Padding">
            <summary>
            Gets or sets the padding for the border content.
            </summary>
        </member>
        <member name="T:DevComponents.WpfRibbon.ButtonCommandParameter">
            <summary>
            Defines default command parameter assigned to ButtonDropDown.CommandParameter property.
            </summary>
        </member>
        <member name="T:DevComponents.WpfRibbon.IButtonCommandParameter">
            <summary>
            Defines an interface for ButtonCommandParameter object assigned to each ButtonDropDown.CommandParameter property.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.IButtonCommandParameter.IsChecked">
            <summary>
            Gets or sets whether button is checked.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.IButtonCommandParameter.Tag">
            <summary>
            Gets or sets the additional data assigned to command parameter.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.IButtonCommandParameter.ValueChanged">
            <summary>
            Gets or sets whether parameter value, IsChecked property has changed and whether it should be applied to ButtonDropDown command parameter is assigned to.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.ButtonCommandParameter.IsCheckedProperty">
            <summary>
            Identifies the IsChecked property.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.ButtonCommandParameter.TagProperty">
            <summary>
            Identifies the Tag property.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.ButtonCommandParameter.ValueChangedProperty">
            <summary>
            Identifies the ValueChanged property.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.ButtonCommandParameter.IsChecked">
            <summary>
            Gets or sets whether button is checked. This value will be assigned to the ButtonDropDown.IsChecked property if ValueChanged property is set to true.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.ButtonCommandParameter.Tag">
            <summary>
            Gets or sets additional data assigned to the parameter.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.ButtonCommandParameter.ValueChanged">
            <summary>
            Gets or sets whether IsChecked value should be assigned to the ButtonDropDown.IsChecked property.
            </summary>
        </member>
        <member name="T:DevComponents.WpfRibbon.ButtonDropDownAutomationPeer">
            <summary>
            Represents the ButtonDropDown Automation Peer.
            </summary>
        </member>
        <member name="T:DevComponents.WpfRibbon.ButtonDropDownCommand">
            <summary>
            Represents the Routed Command for ButtonDropDown control with Header and Image syncing capabilities.
            </summary>
        </member>
        <member name="T:DevComponents.WpfRibbon.IButtonDropDownCommandExtender">
            <summary>
            Defines ButtonDropDown control Command Extender.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.IButtonDropDownCommandExtender.ImageSource">
            <summary>
            Gets or sets the ButtonDropDown.Image source.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.IButtonDropDownCommandExtender.ImageSmallSource">
            <summary>
            Gets or sets the ButtonDropDown.ImageSmall source.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.IButtonDropDownCommandExtender.Header">
            <summary>
            Gets or sets the ButtonDropDown.Header text.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.IButtonDropDownCommandExtender.SyncHeader">
            <summary>
            Gets or sets whether Header property is synced between all ButtonDropDown controls using the same command.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.IButtonDropDownCommandExtender.SyncImageSource">
            <summary>
            Gets or sets whether Image property is synced between all ButtonDropDown controls using the same command.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.IButtonDropDownCommandExtender.SyncImageSmallSource">
            <summary>
            Gets or sets whether ImageSmall property is synced between all ButtonDropDown controls using the same command.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.ButtonDropDownCommand.Header">
            <summary>
            Gets or sets the Header that is assigned to all ButtonDropDown controls that use this command.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.ButtonDropDownCommand.ImageSource">
            <summary>
            Gets or sets the ImageSource that is assigned to Image property of ButtonDropDown controls that use this command.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.ButtonDropDownCommand.ImageSmallSource">
            <summary>
            Gets or sets the ImageSource that is assigned to ImageSmall property of ButtonDropDown controls that use this command.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.ButtonDropDownCommand.SyncHeader">
            <summary>
            Gets or sets whether Header property is synced between all ButtonDropDown controls using the same command. Default value is true.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.ButtonDropDownCommand.SyncImageSource">
            <summary>
            Gets or sets whether Image property is synced between all ButtonDropDown controls using the same command. Default value is true.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.ButtonDropDownCommand.SyncImageSmallSource">
            <summary>
            Gets or sets whether ImageSmall property is synced between all ButtonDropDown controls using the same command. Default value is true.
            </summary>
        </member>
        <member name="T:DevComponents.WpfRibbon.ButtonDropDownCommandExtender">
            <summary>
            Represents the extender for Application commands provided by WPF. The extender connects the WPF command to the ButtonDropDown the command is assigned to
            and it syncs the Header, Image, ImageSmall and IsChecked properties to all ButtonDropDown controls that use same command. You must connect the command extender
            to the system command using the RibbonCommandManager.Connect method.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.ButtonDropDownCommandExtender.Header">
            <summary>
            Gets or sets the Header that is assigned to all ButtonDropDown controls that use this command.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.ButtonDropDownCommandExtender.ImageSource">
            <summary>
            Gets or sets the ImageSource that is assigned to Image property of ButtonDropDown controls that use this command.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.ButtonDropDownCommandExtender.ImageSmallSource">
            <summary>
            Gets or sets the ImageSource that is assigned to ImageSmall property of ButtonDropDown controls that use this command.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.ButtonDropDownCommandExtender.IsChecked">
            <summary>
            Gets or sets the Checked value that is assigned to IsChecked property of all ButtonDropDown controls that use this command.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.ButtonDropDownCommandExtender.SyncIsChecked">
            <summary>
            Gets or sets whether IsChecked property is synced between all ButtonDropDown controls using the same command. Default value is true.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.ButtonDropDownCommandExtender.SyncHeader">
            <summary>
            Gets or sets whether Header property is synced between all ButtonDropDown controls using the same command. Default value is true.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.ButtonDropDownCommandExtender.SyncImageSource">
            <summary>
            Gets or sets whether Image property is synced between all ButtonDropDown controls using the same command. Default value is true.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.ButtonDropDownCommandExtender.SyncImageSmallSource">
            <summary>
            Gets or sets whether ImageSmall property is synced between all ButtonDropDown controls using the same command. Default value is true.
            </summary>
        </member>
        <member name="T:DevComponents.WpfRibbon.ButtonEx">
            <summary>
            Represents stand-alone button with popup menu support.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.ButtonEx.IsCancelProperty">
            <summary>
            Identifies the IsCancel property.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.ButtonEx.IsDefaultProperty">
            <summary>
            Identifies the IsDefault property.
            </summary>
        </member>
        <member name="M:DevComponents.WpfRibbon.ButtonEx.#ctor">
            <summary>
            Initializes a new instance of the class.
            </summary>
        </member>
        <member name="M:DevComponents.WpfRibbon.ButtonEx.SetPopupMode(System.Boolean)">
            <summary>
            Puts the parent control into the popup mode which captures the mouse input.
            </summary>
            <param name="popupMode">Indicates whether popup mode is active.</param>
        </member>
        <member name="P:DevComponents.WpfRibbon.ButtonEx.IsCancel">
            <summary>
            Gets or sets a value that indicates whether a Button is the Cancel button. A user can activate the Cancel button by pressing the Escape key. The default value is false.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.ButtonEx.IsDefault">
            <summary>
            Gets or sets a value that indicates whether a Button is the default button. A user invokes the default button by pressing the Enter key. The default value is false.
            </summary>
        </member>
        <member name="T:DevComponents.WpfRibbon.ButtonPanel">
            <summary>
            Represents the button panel with the automatic layout support for ButtonDropDown controls.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.ButtonPanel.OrientationProperty">
            <summary>
            Specifies the layout orientation for the items inside of the panel.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.ButtonPanel.FixedWidthProperty">
            <summary>
            Specifies the fixed width for the panel.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.ButtonPanel.FixedHeightProperty">
            <summary>
            Specifies the fixed height for the panel.
            </summary>
        </member>
        <member name="M:DevComponents.WpfRibbon.ButtonPanel.Copy(System.Boolean)">
            <summary>
            Creates an copy of the panel. Note that only properties defined by the GroupPanel are copied. No inherited properties are copied.
            </summary>
            <param name="deepCopy">Indicates whether to perform the copy of the children objects contained by the panel.</param>
            <returns>return new instance of the object.</returns>
        </member>
        <member name="P:DevComponents.WpfRibbon.ButtonPanel.Orientation">
            <summary>
            Gets or sets the layout orientation for the items inside of the panel. Default value is Horizontal.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.ButtonPanel.FixedWidth">
            <summary>
            Gets or sets the fixed width of the panel.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.ButtonPanel.FixedHeight">
            <summary>
            Gets or sets the fixed height of the panel.
            </summary>
        </member>
        <member name="T:DevComponents.WpfRibbon.CollapsedRibbonBarButton">
            <summary>
            Represents the RibbonBar in collapsed state.
            </summary>
        </member>
        <member name="T:DevComponents.WpfRibbon.CollapsedRibbonBarControl">
            <summary>
            Represents the collapsed RibbonBar control.
            </summary>
        </member>
        <member name="T:DevComponents.WpfRibbon.CollapsedRibbonBarPanel">
            <summary>
            Represents the collapsed RibbonBar panel.
            </summary>
        </member>
        <member name="T:DevComponents.WpfRibbon.ColorFactory">
            <summary>
            Represents the class used to create Color objects.
            </summary>
        </member>
        <member name="M:DevComponents.WpfRibbon.ColorFactory.#ctor">
            <summary>
            Creates new instance of the object.
            </summary>
        </member>
        <member name="T:DevComponents.WpfRibbon.ColorBlendFactory">
            <summary>
            Represents the class used to create Color objects blended based on base color.
            </summary>
        </member>
        <member name="M:DevComponents.WpfRibbon.ColorBlendFactory.#ctor(System.Windows.Media.Color)">
            <summary>
            Creates new instance of the object.
            </summary>
        </member>
        <member name="M:DevComponents.WpfRibbon.ColorBlendFactory.GetColor(System.Int32)">
            <summary>
            Converts integer color representation to Color type.
            </summary>
            <param name="rgb">Color representation as 32-bit RGB value.</param>
            <returns>Reference to Color object.</returns>
        </member>
        <member name="M:DevComponents.WpfRibbon.ColorBlendFactory.GetColor(System.Windows.Media.Color)">
            <summary>
            Converts integer color representation to Color type.
            </summary>
            <param name="c">Color value.</param>
            <returns>Reference to Color object.</returns>
        </member>
        <member name="T:DevComponents.WpfRibbon.ColorPickerButton">
            <summary>
            Represents color picker button.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.ColorPickerButton.SelectedColorProperty">
            <summary>
            Identifies SelectedColor property.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.ColorPickerButton.SelectedColorChangedEvent">
            <summary>
            Identifies SelectedColorChanged event.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.ColorPickerButton.SelectedColorBrushProperty">
            <summary>
            Identifies SelectedColorBrush property.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.ColorPickerButton.ColorSwatchWidthProperty">
            <summary>
            Identifies ColorSwatchWidth property.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.ColorPickerButton.ColorSwatchHeightProperty">
            <summary>
            Identifies ColorSwatchHeight property.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.ColorPickerButton.ColorSwatchPositionProperty">
            <summary>
            Identifies ColorSwatchPosition property.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.ColorPickerButton.ColorSwatchBorderProperty">
            <summary>
            Identifies ColorSwatchBorder property.
            </summary>
        </member>
        <member name="M:DevComponents.WpfRibbon.ColorPickerButton.#ctor">
            <summary>
            Initializes a new instance of the ColorPickerButton class.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.ColorPickerButton.SelectedColor">
            <summary>
            Gets or sets the currently selected color.
            </summary>
        </member>
        <member name="E:DevComponents.WpfRibbon.ColorPickerButton.SelectedColorChanged">
            <summary>
            Occurs when selected color changes.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.ColorPickerButton.SelectedColorBrush">
            <summary>
            Gets the brush that represents selected color.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.ColorPickerButton.ColorSwatchWidth">
            <summary>
            Gets or sets the width of the color swatch preview that is displayed on face of the button.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.ColorPickerButton.ColorSwatchHeight">
            <summary>
            Gets or sets the height of the color swatch preview that is displayed on face of the button.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.ColorPickerButton.ColorSwatchPosition">
            <summary>
            Gets or sets the position of the color swatch in relation to the button image.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.ColorPickerButton.ColorSwatchBorder">
            <summary>
            Gets or sets whether color swatch border is rendered.
            </summary>
        </member>
        <member name="T:DevComponents.WpfRibbon.ContextGroup">
            <summary>
            Describes the RibbonTab context group used for Contextual Tabs Ribbon feature.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.ContextGroup.VisualStyleProperty">
            <summary>
            Identifies VisualStyle property. VisualStyle should never be set on this control rather on Ribbon control only.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.ContextGroup.EffectiveStyleProperty">
            <summary>
            Identifies EffectiveStyle property.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.ContextGroup.StockColorProperty">
            <summary>
            Identifies the StockColor property.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.ContextGroup.IsSimpleContentProperty">
            <summary>
            Internal property which indicates whether string type is assigned as the content of the group.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.ContextGroup.VisualStyle">
            <summary>
            Gets or sets effective VisualStyle. Note that this property must be set on Ribbon control.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.ContextGroup.EffectiveStyle">
            <summary>
            Gets the effective ribbon style.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.ContextGroup.TabsVisibility">
            <summary>
            Gets or sets the Visibility of the tabs that are part of the contextual group. Property will return Visible for tabs visibility if at least one tab is visible.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.ContextGroup.LinkedTabs">
            <summary>
            Get the reference to the tabs that are linked to this group. Do not modify this collection directly. Rather set RibbonTab.ContextGroup property.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.ContextGroup.StockColor">
            <summary>
            Gets or sets the predefined stock color for the context group. To use custom colors set BorderBrush and Background properties of this control.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.ContextGroup.IsSimpleContent">
            <summary>
            Gets whether string type only has been assigned to the Content property.
            </summary>
        </member>
        <member name="T:DevComponents.WpfRibbon.Converters.ExpandPositionToDockConverter">
            <summary>
            Converts the eExpandPosition enum to the Dock value.
            </summary>
        </member>
        <member name="T:DevComponents.WpfRibbon.Converters.PopupPlacementConverter">
            <summary>
            Defines the converter for ePopupPlacement enum
            </summary>
        </member>
        <member name="T:DevComponents.WpfRibbon.eButtonRole">
            <summary>
            Specifies the button role.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.eButtonRole.SplitButton">
            <summary>
            Button is split button with the command part and part which shows the popup.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.eButtonRole.DropDown">
            <summary>
            Buttons is drop down button which when clicked displays the drop-down.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.eButtonRole.MenuItem">
            <summary>
            Button appears and is used as menu item. It appearance is changed accordingly.
            </summary>
        </member>
        <member name="T:DevComponents.WpfRibbon.eDropDownType">
            <summary>
            Specifies the Button Drop-Down type.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.eDropDownType.Popup">
            <summary>
            Indicates standard popup.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.eDropDownType.Menu">
            <summary>
            Indicates the popup menu with the menu styling. ButtonDropDown controls on the popup menu will be rendered using menu style for button.
            </summary>
        </member>
        <member name="T:DevComponents.WpfRibbon.eButtonImagePosition">
            <summary>
            Specifies the position of the image in relation to the text inside of the button.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.eButtonImagePosition.Left">
            <summary>
            Image is positioned on the left side of the text.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.eButtonImagePosition.Top">
            <summary>
            Image is positioned above the text.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.eButtonImagePosition.Bottom">
            <summary>
            Image is positioned below the text.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.eButtonImagePosition.Right">
            <summary>
            Image is positioned on the right side of the text.
            </summary>
        </member>
        <member name="T:DevComponents.WpfRibbon.eExpandPosition">
            <summary>
            Specifies the alignment of the drop-down button expand part which displays the popup.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.eExpandPosition.Left">
            <summary>
            Expand part is on the left side of the drop-down button.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.eExpandPosition.Right">
            <summary>
            Expand part is on the right side of the drop-down button.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.eExpandPosition.Top">
            <summary>
            Expand part is on the top of the drop-down button.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.eExpandPosition.Bottom">
            <summary>
            Expand part is on the bottom of the drop-down button.
            </summary>
        </member>
        <member name="T:DevComponents.WpfRibbon.eExpandVisibility">
            <summary>
            Specifies the buttons expand sign visiblity.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.eExpandVisibility.Auto">
            <summary>
            Visibility is automatically mananged by the button depending on items it contains.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.eExpandVisibility.Visible">
            <summary>
            Expand sign is always visible.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.eExpandVisibility.Hidden">
            <summary>
            Expand sign is always hidden.
            </summary>
        </member>
        <member name="T:DevComponents.WpfRibbon.eButtonRenderingState">
            <summary>
            Specifies rendering button state.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.eButtonRenderingState.Normal">
            <summary>
            Indicates normal/default state.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.eButtonRenderingState.Hover">
            <summary>
            Indicates the hover, mouse over state.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.eButtonRenderingState.Pressed">
            <summary>
            Indicates pressed state by keyboard or mouse.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.eButtonRenderingState.Checked">
            <summary>
            Indicates the checked state.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.eButtonRenderingState.CheckedHover">
            <summary>
            Indicates checked hover, mouse over state.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.eButtonRenderingState.Disabled">
            <summary>
            Indicates disabled state.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.eButtonRenderingState.Expanded">
            <summary>
            Indicates expanded/popup state.
            </summary>
        </member>
        <member name="T:DevComponents.WpfRibbon.ePopupPlacement">
            <summary>
            Specifies the placement of button drop-down in relation to the button.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.ePopupPlacement.Right">
            <summary>
            Indicates a position of the popup that aligns its left edge with the right edge of the button and aligns its upper edge with the upper edge of the button. 
            If the right screen-edge obscures the Popup, the control repositions itself so that its left edge aligns with the left edge of the button.
            If the left screen-edge obscures the Popup, the control repositions itself so that its left edge aligns with the left screen-edge.
            If the upper or lower screen-edge obscures the Popup, the control then repositions itself to align with the obscuring screen edge. 
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.ePopupPlacement.Left">
            <summary>
            Indicates a position of the popup that aligns its left edge with the right edge of the button and aligns its upper edge with the upper edge of the button.
            If the left screen-edge obscures the Popup, the control repositions itself so that its left edge aligns with the right edge of the button.
            If the right screen-edge obscures the Popup, the right edge of the control aligns with the right screen-edge.
            If the upper or lower screen-edge obscures the Popup, the control repositions itself to align with the obscuring screen edge. 
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.ePopupPlacement.Bottom">
            <summary>
            Indicates a position of the popup where the control aligns its upper edge with the lower edge of the button and aligns its left edge with the left edge of the button.
            If the lower screen-edge obscures the Popup, the control repositions itself so that its lower edge aligns with the upper edge of the button.
            If the upper screen-edge obscures the Popup, the control then repositions itself so that its upper edge aligns with the upper screen-edge. 
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.ePopupPlacement.Top">
            <summary>
            Indicates a position of the popup that aligns its lower edge with the upper edge of the button and aligns its left edge with the left edge of the button.
            If the upper screen-edge obscures the Popup, the control repositions itself so that its upper edge aligns with the lower edge of the button.
            If the lower screen-edge obscures the Popup, the lower edge of the control aligns with the lower screen-edge.
            If the left or right screen-edge obscures the Popup, it then repositions itself to align with the obscuring screen. 
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.ePopupPlacement.Custom">
            <summary>
            Indicates a custom position of the popup. You can custom position the popup by handling the PopupOpened event and accessing the ButtonDropDown.Popup property.
            Position of the popup is relative to the upper-left corner of the screen and at an offset that is defined by the Popup.HorizontalOffset and Popup.VerticalOffset property values. If the screen edge obscures the Popup, the control then repositions itself to align with the edge. 
            </summary>
        </member>
        <member name="T:DevComponents.WpfRibbon.eButtonPanelOrientation">
            <summary>
            Defines the orientation.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.eButtonPanelOrientation.Horizontal">
            <summary>
            Specifies the horizontal orientation.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.eButtonPanelOrientation.Vertical">
            <summary>
            Specifies the vertical orientation.
            </summary>
        </member>
        <member name="T:DevComponents.WpfRibbon.eButtonPartVisibility">
            <summary>
            Defines the visiblity of the button parts.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.eButtonPartVisibility.ImageAndHeader">
            <summary>
            Both image and header (text) if specified are visible.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.eButtonPartVisibility.ImageOnly">
            <summary>
            Image is only visible.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.eButtonPartVisibility.HeaderOnly">
            <summary>
            Header is only visible.
            </summary>
        </member>
        <member name="T:DevComponents.WpfRibbon.eRibbonBarRenderingState">
            <summary>
            Specifies rendering state for the ribbon bar.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.eRibbonBarRenderingState.Normal">
            <summary>
            Indicates normal/default state.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.eRibbonBarRenderingState.Hover">
            <summary>
            Indicates the hover, mouse over state.
            </summary>
        </member>
        <member name="T:DevComponents.WpfRibbon.eRibbonContentPart">
            <summary>
            Specifies the ribbon content part for the RibbonContentPanel
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.eRibbonContentPart.ApplicationMenu">
            <summary>
            Identifies the Application menu part.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.eRibbonContentPart.QuickAccessToolbar">
            <summary>
            Identifies the Quick Access Toolbar part.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.eRibbonContentPart.Tabs">
            <summary>
            Identifies the Ribbon Tabs part.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.eRibbonContentPart.None">
            <summary>
            Part is not a content ribbon part.
            </summary>
        </member>
        <member name="T:DevComponents.WpfRibbon.eRibbonTabRenderingState">
            <summary>
            Specifies the state of the Ribbon tab
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.eRibbonTabRenderingState.Normal">
            <summary>
            Indicates normal/default state.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.eRibbonTabRenderingState.Selected">
            <summary>
            Indicates the selected state.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.eRibbonTabRenderingState.Hover">
            <summary>
            Indicates the hover, mouse over state.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.eRibbonTabRenderingState.HoverSelected">
            <summary>
            Indicates the hover, mouse over state while tab is selected
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.eRibbonTabRenderingState.Focused">
            <summary>
            Indicates that tab has keyboard input focus.
            </summary>
        </member>
        <member name="T:DevComponents.WpfRibbon.eTabElementAlignment">
            <summary>
            Defines the alignment for the controls added to the Ribbon Tab area.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.eTabElementAlignment.Left">
            <summary>
            Element is aligned to the left.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.eTabElementAlignment.Right">
            <summary>
            Element is aligned to the right.
            </summary>
        </member>
        <member name="T:DevComponents.WpfRibbon.eAutoSizeHint">
            <summary>
            Defines the auto-size states supported by ButtonDropDown control.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.eAutoSizeHint.Small">
            <summary>
            Button can be resized up to its smallest size variant where only image is visible usually 16x16 pixels size. This is the most flexible auto-sizing hint since it allows the button to scale
            from Large, Medium to Small size.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.eAutoSizeHint.Medium">
            <summary>
            Button can be resized up to its medium size variant where small image (usually 16x16 size) and header/text are visible. Image is positioned on the left side of the text. This auto-sizing hint allows
            Large and Medium button sizes only.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.eAutoSizeHint.NoAutoSize">
            <summary>
            Specifies that button is not auto-sized by the RibbonBar layout.
            </summary>
        </member>
        <member name="T:DevComponents.WpfRibbon.eContextGroupColor">
            <summary>
            Defines stock context group colors.
            </summary>
        </member>
        <member name="T:DevComponents.WpfRibbon.eRibbonTabColor">
            <summary>
            Defines the stock ribbon tab colors.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.eRibbonTabColor.Default">
            <summary>
            Specifies the default tab color.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.eRibbonTabColor.Green">
            <summary>
            Specifies the green tab color.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.eRibbonTabColor.Red">
            <summary>
            Specifies the red tab color.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.eRibbonTabColor.Orange">
            <summary>
            Specifies the orange tab color.
            </summary>
        </member>
        <member name="T:DevComponents.WpfRibbon.eRibbonVisualStyle">
            <summary>
            Defines the ribbon system color tables.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.eRibbonVisualStyle.Office2007Blue">
            <summary>
            Indicates Office 2007 Blue Style.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.eRibbonVisualStyle.Office2007Silver">
            <summary>
            Indicates Office 2007 Silver Style.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.eRibbonVisualStyle.Office2007Black">
            <summary>
            Indicates Office 2007 Black Style.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.eRibbonVisualStyle.Office2010Silver">
            <summary>
            Indicates Office 2010 Silver Style.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.eRibbonVisualStyle.Office2010Blue">
            <summary>
            Indicates Office 2010 Blue Style.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.eRibbonVisualStyle.Office2010Black">
            <summary>
            Indicates Office 2010 Black Style.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.eRibbonVisualStyle.Office2013">
            <summary>
            Indicates Office 2013 style.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.eRibbonVisualStyle.Office2013LightGray">
            <summary>
            Indicates Office 2013 Light Gray style.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.eRibbonVisualStyle.Office2013DarkGray">
            <summary>
            Indicates Office 2013 Dark Gray style.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.eRibbonVisualStyle.Office2016">
            <summary>
            Indicates Office 2016 style.
            </summary>
        </member>
        <member name="T:DevComponents.WpfRibbon.eEffectiveStyle">
            <summary>
            Defines distinct visual styles for Ribbon.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.eEffectiveStyle.Office2007">
            <summary>
            Office 2007 style.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.eEffectiveStyle.Office2010">
            <summary>
            Office 2010 style.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.eEffectiveStyle.Office2013">
            <summary>
            Office 2013 style.
            </summary>
        </member>
        <member name="T:DevComponents.WpfRibbon.eElementRole">
            <summary>
            Defines an item role based on its appearance in Ribbon interface.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.eElementRole.Default">
            <summary>
            Default element role.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.eElementRole.AppMenuDocumentCommand">
            <summary>
            Element is part of the application menu document commands usually displayed on left-hand side of application menu.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.eElementRole.AppMenuMruItem">
            <summary>
            Element is part of the application menu most recently used items usually displayed on right-hand side of application menu.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.eElementRole.AppMenuApplicationCommand">
            <summary>
            Element is part of the application menu application commands usually displayed on bottom of the application menu.
            </summary>
        </member>
        <member name="T:DevComponents.WpfRibbon.eBackstagePanelBackgroundImage">
            <summary>
            Defines available built-in background images for backstage tab panel.
            </summary>
        </member>
        <member name="T:DevComponents.WpfRibbon.eApplicationMenuColor">
            <summary>
            Defines available pre-defined Office 2010 application menu color schemes.
            </summary>
        </member>
        <member name="T:DevComponents.WpfRibbon.QatDialogEventHandler">
            <summary>
            Defines the delegate for the QAT Dialog events.
            </summary>
            <param name="sender">Identifies the sender</param>
            <param name="e">Provides data for the event handler</param>
        </member>
        <member name="T:DevComponents.WpfRibbon.QatDialogEventArgs">
            <summary>
            Provides data for the QAT Dialog events.
            </summary>
        </member>
        <member name="M:DevComponents.WpfRibbon.QatDialogEventArgs.#ctor">
            <summary>
            Creates new instance of the object.
            </summary>
        </member>
        <member name="M:DevComponents.WpfRibbon.QatDialogEventArgs.#ctor(System.Windows.RoutedEvent)">
            <summary>
            Creates new instance of the object.
            </summary>
        </member>
        <member name="M:DevComponents.WpfRibbon.QatDialogEventArgs.#ctor(System.Windows.RoutedEvent,System.Object)">
            <summary>
            Creates new instance of the object.
            </summary>
        </member>
        <member name="T:DevComponents.WpfRibbon.QatOperationAddEventHandler">
            <summary>
            Defines delegate for the Quick Access Toolbar events.
            </summary>
            <param name="sender">Indicates the event sender.</param>
            <param name="e">Provides data for the event.</param>
        </member>
        <member name="T:DevComponents.WpfRibbon.QatOperationAddEventArgs">
            <summary>
            Provides data for the Quick Access Toolbar Add events.
            </summary>
        </member>
        <member name="T:DevComponents.WpfRibbon.QatOperationEventArgs">
            <summary>
            Provides data for the Quick Access Toolbar operation events.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.QatOperationEventArgs.Item">
            <summary>
            Gets the item the operation is performed on.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.QatOperationEventArgs.Cancel">
            <summary>
            Gets or sets whether operation is cancelled. Only Before operations can be cancelled.
            </summary>
        </member>
        <member name="M:DevComponents.WpfRibbon.QatOperationEventArgs.#ctor(System.Object)">
            <summary>
            Creates new instance of the class.
            </summary>
            <param name="item">reference to item operation is performed on.</param>
        </member>
        <member name="M:DevComponents.WpfRibbon.QatOperationEventArgs.#ctor(System.Object,System.Windows.RoutedEvent)">
            <summary>
            Creates new instance of the class.
            </summary>
            <param name="item">reference to item operation is performed on.</param>
        </member>
        <member name="M:DevComponents.WpfRibbon.QatOperationEventArgs.#ctor(System.Object,System.Windows.RoutedEvent,System.Object)">
            <summary>
            Creates new instance of the class.
            </summary>
            <param name="item">reference to item operation is performed on.</param>
        </member>
        <member name="F:DevComponents.WpfRibbon.QatOperationAddEventArgs.ItemCopy">
            <summary>
            Gets the copy of the item that will be added to the Quick Access Toolbar. When item being added is ButtonDropDown or RibbonBar
            ribbon control will automatically creates a copy of the item. You can modify it if needed. If any other item type is being added
            to the Quick Access Toolbar you must set this property to the copy of the item or the InvalidOperationException will be thrown.
            </summary>
        </member>
        <member name="M:DevComponents.WpfRibbon.QatOperationAddEventArgs.#ctor(System.Object)">
            <summary>
            Creates new instance of the class.
            </summary>
            <param name="item">reference to item operation is performed on.</param>
        </member>
        <member name="M:DevComponents.WpfRibbon.QatOperationAddEventArgs.#ctor(System.Object,System.Windows.RoutedEvent)">
            <summary>
            Creates new instance of the class.
            </summary>
            <param name="item">reference to item operation is performed on.</param>
        </member>
        <member name="M:DevComponents.WpfRibbon.QatOperationAddEventArgs.#ctor(System.Object,System.Windows.RoutedEvent,System.Object)">
            <summary>
            Creates new instance of the class.
            </summary>
            <param name="item">reference to item operation is performed on.</param>
        </member>
        <member name="T:DevComponents.WpfRibbon.QatOperationEventHandler">
            <summary>
            Defines delegate for the Quick Access Toolbar events.
            </summary>
            <param name="sender">Indicates the event sender.</param>
            <param name="e">Provides data for the event.</param>
        </member>
        <member name="T:DevComponents.WpfRibbon.CrumbBarColors">
            <summary>
            Defines colors used by CrumbBar control.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.CrumbBarItem.ImageProperty">
            <summary>
            Identifies Image property.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.CrumbBarItem.ImageSourceProperty">
            <summary>
            Identifies ImageSource property.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.CrumbBarItem.IsMouseOverStateProperty">
            <summary>
            Identifies IsMouseOverState property.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.CrumbBarItem.IsSelectedProperty">
            <summary>
            Indicates whether item is selected.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.CrumbBarItem.Image">
            <summary>
            Gets or sets image associated with this item.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.CrumbBarItem.ImageSource">
            <summary>
            Gets or sets the string that represents the image source that will be loaded and assigned to the Image property.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.CrumbBarItem.IsMouseOverState">
            <summary>
            Gets or sets whether item is rendered in mouse over state.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.CrumbBarItem.IsSelected">
            <summary>
            Gets whether item is selected.
            </summary>
        </member>
        <member name="T:DevComponents.WpfRibbon.CrumbBar">
            <summary>
            Represents one line, flat (bread-crumb) tree control.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.CrumbBar.SelectedItemProperty">
            <summary>
            Identifies SelectedItem property.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.CrumbBar.SelectedImageProperty">
            <summary>
            Identifies SelectedImage property.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.CrumbBar.HasOverflowItemsProperty">
            <summary>
            Identifies HasOverflowItems property.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.CrumbBar.IsOverflowOpenProperty">
            <summary>
            Identifies IsOverflowOpen property.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.CrumbBar.ActionItemsProperty">
            <summary>
            Identifies the ActionItems property.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.CrumbBar.HasActionItemsProperty">
            <summary>
            Identifies the HasAppItems property.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.CrumbBar.ActionItemTemplateProperty">
            <summary>
            Identifies ActionItemTemplate property.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.CrumbBar.ActionItemTemplateSelectorProperty">
            <summary>
            Identifies ActionItemTemplateSelector property.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.CrumbBar.SelectionChangedEvent">
            <summary>
            Identifies the SelectionChanged event which is raised when selection has changed.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.CrumbBar.PreviewSelectionChangedEvent">
            <summary>
            Identifies PreviewSelectionChanged event which is raised before SelectionChanged event.
            </summary>
        </member>
        <member name="M:DevComponents.WpfRibbon.CrumbBar.OnSelectionChanged(System.Object,System.Object)">
            <summary>
            Raises PreviewSelectionChanged and SelectionChanged events.
            </summary>
        </member>
        <member name="M:DevComponents.WpfRibbon.CrumbBar.#cctor">
            <summary>
            Initializes a new instance of the CrumbBar class.
            </summary>
        </member>
        <member name="M:DevComponents.WpfRibbon.CrumbBar.#ctor">
            <summary>
            Initializes a new instance of the CrumbBar class.
            </summary>
        </member>
        <member name="M:DevComponents.WpfRibbon.CrumbBar.ChangeColorScheme(DevComponents.WpfRibbon.eCrumbBarVisualStyle)">
            <summary>
            Changes current color table. This method will work only if Application.Current has valid value.
            </summary>
            <param name="colorTable">Color table to change the scheme to.</param>
        </member>
        <member name="M:DevComponents.WpfRibbon.CrumbBar.ChangeColorScheme(DevComponents.WpfRibbon.eCrumbBarVisualStyle,System.Windows.Media.Color)">
            <summary>
            Changes current color table. This method will work only if Application.Current has valid value.
            </summary>
            <param name="baseColorTable">Color table to use as basis for the new color scheme to be created.</param>
            <param name="baseColor">Base color to use to create new color table.</param>
        </member>
        <member name="M:DevComponents.WpfRibbon.CrumbBar.CreateColorScheme(DevComponents.WpfRibbon.eCrumbBarVisualStyle,System.Windows.Media.Color)">
            <summary>
            Creates new color scheme based on the existing color table and single specified base color.
            </summary>
            <param name="baseColorTable">Color table identifier.</param>
            <param name="baseColor">Base color to use to create the new color scheme.</param>
            <returns>New ResourceDictionary object that you can merge into the application resources.</returns>
        </member>
        <member name="P:DevComponents.WpfRibbon.CrumbBar.SelectedItem">
            <summary>
            Gets or sets current selected tree item.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.CrumbBar.SelectedImage">
            <summary>
            Gets the image for the selected compact tree item. This property should not be changed since it is maintened by the control.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.CrumbBar.HasOverflowItems">
            <summary>
            Gets or sets whether inline tree item view fits into the available space.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.CrumbBar.IsOverflowOpen">
            <summary>
            Gets or sets whether overflow popup menu is open.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.CrumbBar.ActionItems">
            <summary>
            Gets the reference to the collection of custom buttons displayed next to the tree items inside of the control.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.CrumbBar.HasActionItems">
            <summary>
            Gets whether tree has action items defined. You can use this property to for example conditionaly hide/show elements using XAML triggers.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.CrumbBar.ActionItemTemplate">
            <summary>
            Gets or sets the template for each item in the ActionItems collection.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.CrumbBar.ActionItemTemplateSelector">
            <summary>
            Gets or sets the DataTemplateSelector which allows you to provide custom logic for choosing a template used to display each action item.
            </summary>
        </member>
        <member name="E:DevComponents.WpfRibbon.CrumbBar.SelectionChanged">
            <summary>
            Identifies the SelectionChanged event which is raised when selection has changed.
            </summary>
        </member>
        <member name="E:DevComponents.WpfRibbon.CrumbBar.PreviewSelectionChanged">
            <summary>
            Identifies PreviewSelectionChanged event which is raised before SelectionChanged event.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.CrumbBar.ViewItems">
            <summary>
            Gets the collection of the view items that are created to support current view.
            </summary>
        </member>
        <member name="T:DevComponents.WpfRibbon.eCrumbBarVisualStyle">
            <summary>
            Defines the CrumbBar control visual styles.
            </summary>
        </member>
        <member name="T:DevComponents.WpfRibbon.CrumbBarItemView">
            <summary>
            Represents a view of CrumbBarItem in tree inline representation.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.CrumbBarItemView.HeaderProperty">
            <summary>
            Identifies Header property.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.CrumbBarItemView.CrumbBarItemProperty">
            <summary>
            Represents CrumbBarItem property.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.CrumbBarItemView.IsOverflowItemProperty">
            <summary>
            Identifies IsOverflowItem property.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.CrumbBarItemView.IsPopupOpenProperty">
            <summary>
            Identifies IsPopupOpen property.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.CrumbBarItemView.IsMouseOverStateProperty">
            <summary>
            Identifies IsMouseOverState property.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.CrumbBarItemView.Header">
            <summary>
            Gets or sets the header.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.CrumbBarItemView.CrumbBarItem">
            <summary>
            Gets or sets the reference to CrumbBarItem represented by this view.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.CrumbBarItemView.IsOverflowItem">
            <summary>
            Gets whether this item view is displayed on overflow popup menu.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.CrumbBarItemView.IsPopupOpen">
            <summary>
            Gets or set whether popup menu that displays child items is open.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.CrumbBarItemView.IsMouseOverState">
            <summary>
            Gets or sets whether item is rendered in mouse over state.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.CrumbBarOverflowToggleButton.IsMouseOverStateProperty">
            <summary>
            Identifies IsMouseOverState property.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.CrumbBarOverflowToggleButton.IsMouseOverState">
            <summary>
            Gets or sets whether item is rendered in mouse over state.
            </summary>
        </member>
        <member name="T:DevComponents.WpfRibbon.CrumbBarSelectionChangedEventArgs">
            <summary>
            Provides event arguments for SelectionChanged event.
            </summary>
        </member>
        <member name="M:DevComponents.WpfRibbon.CrumbBarSelectionChangedEventArgs.#ctor(System.Windows.RoutedEvent,System.Object,System.Object,System.Object)">
            <summary>
            Initializes a new instance of the CrumbBarSelectionChangedEventArgs class.
            </summary>
            <param name="routedEvent">Reference to routed event.</param>
            <param name="source">Source of the event.</param>
            <param name="selectedItem">Item being selected</param>
            <param name="deselectedItem">Item being deselected</param>
        </member>
        <member name="P:DevComponents.WpfRibbon.CrumbBarSelectionChangedEventArgs.SelectedItem">
            <summary>
            Gets reference to the item that was selected.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.CrumbBarSelectionChangedEventArgs.DeselectedItem">
            <summary>
            Gets the reference to the item that was deselected.
            </summary>
        </member>
        <member name="T:DevComponents.WpfRibbon.CrumbBarSelectionChangedEventHandler">
            <summary>
            Defines delegate for the SelectionChanged event.
            </summary>
            <param name="sender">Indicates the event sender.</param>
            <param name="e">Provides data for the event.</param>
        </member>
        <member name="F:DevComponents.WpfRibbon.ExpandDecorator.PopupPlacementProperty">
            <summary>
            Identifies PopupPlacement property.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.ExpandDecorator.PopupPlacement">
            <summary>
            Gets or sets the direction expander points to.
            </summary>
        </member>
        <member name="T:DevComponents.WpfRibbon.Gallery">
            <summary>
            Represents the Office 2007 style in-Ribbon gallery control.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.Gallery.DropDownGalleryCommand">
            <summary>
            Defines the DropDownGallery command
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.Gallery.IsCollapsibleProperty">
            <summary>
            Identifies the IsCollapsible property.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.Gallery.IsResizeEnabledProperty">
            <summary>
            Identifies the IsResizeEnabled property.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.Gallery.SuggestedContainerWidthProperty">
            <summary>
            Identifies the SuggestedContainerWidth property.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.Gallery.IsCollapsedProperty">
            <summary>
            Identifies the IsCollapsed property.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.Gallery.MenuItemsProperty">
            <summary>
            Identifies the MenuItems property.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.Gallery.MenuItemsVisibilityProperty">
            <summary>
            Identifies the MenuItemsVisibility property.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.Gallery.CategoryProperty">
            <summary>
            Identifies the Category attached property.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.Gallery.MaxPopupHeightProperty">
            <summary>
            Identifies MaxPopupHeight property.
            </summary>
        </member>
        <member name="M:DevComponents.WpfRibbon.Gallery.GetCategory(System.Windows.UIElement)">
            <summary>
            Gets the string which identifies the visual Category UI Element is assigned to.
            </summary>
            <param name="element">Reference to the UI element</param>
            <returns>Return the Category an element is assigned to.</returns>
        </member>
        <member name="M:DevComponents.WpfRibbon.Gallery.SetCategory(System.Windows.UIElement,System.String)">
            <summary>
            Assigns the UI Element to a visual Category. The element visual categories are displayed when gallery is expanded and displayed on popup menu.
            </summary>
            <param name="element">Reference to the UI Element.</param>
            <param name="category">Category to assign to UI element</param>
        </member>
        <member name="P:DevComponents.WpfRibbon.Gallery.MaxPopupHeight">
            <summary>
            Gets or sets the maximum height of Gallery popup not including any additional menu items. Default value is 400.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.Gallery.MenuItems">
            <summary>
            Gets the collection of items displayed on Gallery drop down menu.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.Gallery.IsCollapsible">
            <summary>
            Gets or sets whether Gallery can collapse into the drop-down button when there is not enough size to display the gallery at its minimum size. Default value is true.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.Gallery.IsResizeEnabled">
            <summary>
            Gets or sets whether popup Gallery can be resized using the resize grip displayed on the bottom of the popup. Default value is true.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.Gallery.IsCollapsed">
            <summary>
            Gets whether Gallery is collapsed into the drop-down button becouse it could not fit into the available space.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.Gallery.MenuItemsVisibility">
            <summary>
            Gets whether popup gallery part that displays the menu items is visible.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.Gallery.SuggestedContainerWidth">
            <summary>
            Gets or sets the suggested width for the inner Gallery container which contains gallery items. Width specified excludes the Gallery border and gallery scroll bars.
            Value set here is used as suggested default width for the gallery container and will be used only if there is enough space available to resize the gallery to this size.
            You can use Width property to specify fixed Gallery width (which overrides value set here) and MinWidth property to specify minimum Gallery width. Default value is 200.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.GalleryScrollViewer.VerticalOffsetProperty">
            <summary>
            Indicates vertical offset.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.GalleryScrollViewer.LineDownCommand">
            <summary>
            Defines the Line Down command
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.GalleryScrollViewer.LineUpCommand">
            <summary>
            Defines the Line Up command
            </summary>
        </member>
        <member name="T:DevComponents.WpfRibbon.GroupPanel">
            <summary>
            Defines visual group for buttons that perform similar function. For example you can group Bold, Italic and Underline buttons visually using this control.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.GroupPanel.VisualStyleProperty">
            <summary>
            Identifies VisualStyle property. VisualStyle should never be set on this control rather on Ribbon control only.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.GroupPanel.EffectiveStyleProperty">
            <summary>
            Identifies EffectiveStyle property.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.GroupPanel.BorderBrushProperty">
            <summary>
            Identifies the BorderBrush property.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.GroupPanel.LightBorderBrushProperty">
            <summary>
            Identifies the LightBorderBrush property.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.GroupPanel.CornerRadiusProperty">
            <summary>
            Identifies the CornerRadius property.
            </summary>
        </member>
        <member name="M:DevComponents.WpfRibbon.GroupPanel.Copy(System.Boolean)">
            <summary>
            Creates an copy of the panel. Note that only properties defined by the GroupPanel are copied. No inherited properties are copied.
            </summary>
            <param name="deepCopy">Indicates whether to perform the copy of the children objects contained by the panel.</param>
            <returns>return new instance of the object.</returns>
        </member>
        <member name="P:DevComponents.WpfRibbon.GroupPanel.VisualStyle">
            <summary>
            Gets or sets effective VisualStyle. Note that this property must be set on Ribbon control.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.GroupPanel.EffectiveStyle">
            <summary>
            Gets the effective ribbon style.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.GroupPanel.BorderBrush">
            <summary>
            Gets or sets the border brush.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.GroupPanel.LightBorderBrush">
            <summary>
            Gets or sets the light border brush used around the border.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.GroupPanel.CornerRadius">
            <summary>
            Gets or sets the borders corner radius.
            </summary>
        </member>
        <member name="M:DevComponents.WpfRibbon.KeyTipsAdorner.ProcessKeyInput(System.String,System.Boolean@)">
            <summary>
            Processes the textual key tip input.
            </summary>
            <param name="textInput">Text that was inputed single character.</param>
            <param name="markAsHandled">Marks the event as handled if it is processed by key tip.</param>
            <returns>Returns true if the action for the key tip was executed and key tips should be hidden otherwise false.</returns>
        </member>
        <member name="M:DevComponents.WpfRibbon.KeyTipsAdorner.ExecuteAction(System.Windows.UIElement)">
            <summary>
            Executes the default key tip action for an UI Element when key tip for that element is pressed.
            </summary>
            <param name="elem"></param>
            <returns></returns>
        </member>
        <member name="P:DevComponents.WpfRibbon.KeyTipsAdorner.KeyTipsStack">
            <summary>
            Gets or sets current KeyTips stack which holds already pressed keys for multi-key KeyTips.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.KeyTipsAdorner.ContextObject">
            <summary>
            Gets or sets the root context object for the key tips.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.KeyTipsAdorner.RootControl">
            <summary>
            Gets or sets the root control for the key tips.
            </summary>
        </member>
        <member name="T:DevComponents.WpfRibbon.MenuItemColors">
            <summary>
            Defines resource keys for the flat menu item style.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.MenuItemColors.MenuItemClass">
            <summary>Identifies MenuItem class.</summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.MenuItemColors.MenuPopupClass">
            <summary>Identifies Popup Menu class.</summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.MenuItemColors.SeparatorClass">
            <summary>Identifies Flat Separator class.</summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.NavigationPane.ExpandButtonVisibilityProperty">
            <summary>
            Identifies ExpandButtonVisibility property.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.NavigationPane.Collapse">
            <summary>
            Defines the system routed command that collapses navigation pane control.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.NavigationPane.Expand">
            <summary>
            Defines the system routed command that expands navigation pane control.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.NavigationPane.SelectedContentProperty">
            <summary>
            Gets the content of the selected item.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.NavigationPane.SelectedPaneItemProperty">
            <summary>
            Identifies the SelectedPaneItem property.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.NavigationPane.SelectedContentTemplateProperty">
            <summary>
            Identifies the SelectedContentTemplate Property.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.NavigationPane.SelectedContentTemplateSelectorProperty">
            <summary>
            Identifies the SelectedContentTemplateSelector Property.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.NavigationPane.SelectedContentHeaderProperty">
            <summary>
            Gets the content of the selected content header.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.NavigationPane.ContentTemplateSelectorProperty">
            <summary>
            Identifies the ContentTemplateSelector Property.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.NavigationPane.ContentTemplateProperty">
            <summary>
            Identifies the ContentTemplate Property.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.NavigationPane.IsExpandedProperty">
            <summary>
            Identifies the IsExpanded property.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.NavigationPane.LargeItemsCountProperty">
            <summary>
            Identifies the LargeItemsCount property.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.NavigationPane.SystemTextProperty">
            <summary>
            Identifies the SystemText property.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.NavigationPane.ExpandedWidthProperty">
            <summary>
            Identifies the ExpandedWidth property.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.NavigationPane.CollapsedWidthProperty">
            <summary>
            Identifies the CollapsedWidth property.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.NavigationPane.ExpandedEvent">
            <summary>
            Identifies the Expanded event.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.NavigationPane.CollapsedEvent">
            <summary>
            Identifies the Collapsed event.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.NavigationPane.PopupOpenedEvent">
            <summary>
            Identifies the PopupOpened event.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.NavigationPane.PopupClosedEvent">
            <summary>
            Identifies the PopupClosed event.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.NavigationPane.BeforeCustomizeDialogEvent">
            <summary>
            Identifies the BeforeCustomizeDialog event.
            </summary>
        </member>
        <member name="M:DevComponents.WpfRibbon.NavigationPane.#ctor">
            <summary>
            Initializes a new instance of the NavigationPane class.
            </summary>
        </member>
        <member name="M:DevComponents.WpfRibbon.NavigationPane.OnExpanded(System.Windows.RoutedEventArgs)">
            <summary>
            Raises the Expanded event.
            </summary>
            <param name="e">Provides event arguments.</param>
        </member>
        <member name="M:DevComponents.WpfRibbon.NavigationPane.OnCollapsed(System.Windows.RoutedEventArgs)">
            <summary>
            Raises the Collapsed event.
            </summary>
            <param name="e">Provides event arguments.</param>
        </member>
        <member name="M:DevComponents.WpfRibbon.NavigationPane.OnPopupOpened(System.Windows.RoutedEventArgs)">
            <summary>
            Raises the PopupOpened event.
            </summary>
            <param name="e">Provides event arguments.</param>
        </member>
        <member name="M:DevComponents.WpfRibbon.NavigationPane.OnPopupClosed(System.Windows.RoutedEventArgs)">
            <summary>
            Raises the PopupClosed event.
            </summary>
            <param name="e">Provides event arguments.</param>
        </member>
        <member name="M:DevComponents.WpfRibbon.NavigationPane.OnBeforeCustomizeDialogEvent(System.Windows.RoutedEventArgs)">
            <summary>
            Raises the BeforeCustomizeDialogEvent event.
            </summary>
            <param name="e">Provides event arguments.</param>
        </member>
        <member name="M:DevComponents.WpfRibbon.NavigationPane.ClosePopup">
            <summary>
            Closes the navigation pane popup if it is displayed while navigation pane is collapsed.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.NavigationPane.SelectedContentHeaderTemplateProperty">
            <summary>
            Identifies SelectedContentHeaderTemplate property.
            </summary>
        </member>
        <member name="M:DevComponents.WpfRibbon.NavigationPane.ShowOptionsDialog">
            <summary>
            Shows Options dialog which allows customization and re-ordering of buttons. You can handle BeforeCustomizeDialogEvent
            to display your own customization dialog instead of system ones. To indicate that you have provided custom dialog set RoutedEventArgs.Handled=true to disable controls system dialog.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.NavigationPane.CustomizationEnabledProperty">
            <summary>
            Identifies CustomizationEnabled property.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.NavigationPane.ExpandButtonVisibility">
            <summary>
            Gets or sets visibility of expand button.
            </summary>
        </member>
        <member name="E:DevComponents.WpfRibbon.NavigationPane.Expanded">
            <summary>
            Occurs after Navigation Pane control has been expanded (IsExpanded is set to true)
            </summary>
        </member>
        <member name="E:DevComponents.WpfRibbon.NavigationPane.Collapsed">
            <summary>
            Occurs after Navigation Pane control has collapsed (IsExpanded is set to false).
            </summary>
        </member>
        <member name="E:DevComponents.WpfRibbon.NavigationPane.PopupOpened">
            <summary>
            Occurs when NavigationPane popup which shows selected pane content is open. Displaying content of the control on Popup
            is available when NavigationPane is collapsed.
            </summary>
        </member>
        <member name="E:DevComponents.WpfRibbon.NavigationPane.PopupClosed">
            <summary>
            Occurs after NavigationPane popup which shows selected pane content is closed. Displaying content of the control on Popup
            is available when NavigationPane is collapsed.
            </summary>
        </member>
        <member name="E:DevComponents.WpfRibbon.NavigationPane.BeforeCustomizeDialog">
            <summary>
            Occurs before Navigation Pane Customize dialog is displayed.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.NavigationPane.SelectedPaneItem">
            <summary>
            Gets the selected DockWindow.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.NavigationPane.SelectedContent">
            <summary>
            Gets the content of the selected pane item.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.NavigationPane.SelectedContentHeaderTemplate">
            <summary>
            Gets or sets the template for SelectedContentHeader.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.NavigationPane.SelectedContentHeader">
            <summary>
            Gets the header of the selected pane item.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.NavigationPane.ContentTemplate">
            <summary>
            Gets or sets the data template used to display the content of the ContentControl. This is a dependency property. 
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.NavigationPane.ContentTemplateSelector">
            <summary>
            Gets or sets a template selector that enables an application writer to provide custom template-selection logic. This is a dependency property. 
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.NavigationPane.ExpandedWidth">
            <summary>
            Gets the expanded control width. This property is automatically set to Width (if assigned), by control when IsExpanded property value changes and control is collapsed.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.NavigationPane.CollapsedWidth">
            <summary>
            Gets the collapsed width of the control.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.NavigationPane.LargeItemsCount">
            <summary>
            Gets or sets the number of items displayed on the panel that are in large state.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.NavigationPane.IsExpanded">
            <summary>
            Gets or sets Navigation Pane is expanded. Setting this property to false will collapse Navigation Pane and allow display of selected content
            on popup.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.NavigationPane.SystemText">
            <summary>
            Gets the object that describes all system texts used by the control.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.NavigationPane.CustomizationEnabled">
            <summary>
            Gets or sets whether customize button is visible in NavigationPane footer.
            </summary>
        </member>
        <member name="T:DevComponents.WpfRibbon.NavigationPaneColors">
            <summary>
            Describes the color keys for the navigation pane colors.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.NavigationPaneColors.NavPaneClass">
            <summary>Identifies NavigationPane class.</summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.NavigationPaneColors.PaneItemClass">
            <summary>Identifies PaneItem class.</summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.NavigationPaneColors.ExpanderClass">
            <summary>Identifies Expander class.</summary>
        </member>
        <member name="T:DevComponents.WpfRibbon.NavigationPaneCustomizeButton">
            <summary>
            Represents the Navigation Pane Customize Button.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.NavigationPaneCustomizeButton.IsCustomizeMenuOpenProperty">
            <summary>
            Identifes the IsCustomizeMenuOpen property.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.NavigationPaneCustomizeButton.IsCustomizeMenuOpen">
            <summary>
            Gets whether customize menu is open.
            </summary>
        </member>
        <member name="T:DevComponents.WpfRibbon.NavigationPaneCustomizeDialog">
            <summary>
            Interaction logic for NavigationPaneCustomizeDialog.xaml
            </summary>
            <summary>
            NavigationPaneCustomizeDialog
            </summary>
        </member>
        <member name="M:DevComponents.WpfRibbon.NavigationPaneCustomizeDialog.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="M:DevComponents.WpfRibbon.PaneItemDescription.#ctor(DevComponents.WpfRibbon.PaneItem)">
            <summary>
            Initializes a new instance of the PaneItemDescription class.
            </summary>
            <param name="paneItem"></param>
        </member>
        <member name="M:DevComponents.WpfRibbon.PaneItemDescriptionList.#ctor(DevComponents.WpfRibbon.NavigationPane)">
            <summary>
            Initializes a new instance of the PaneItemDescriptionList class.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.NavigationPaneLocalization.ShowMoreButtons">
            <summary>
            Gets or sets the text displayed on Navigation Pane Customize menu item which shows more buttons.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.NavigationPaneLocalization.ShowFewerButtons">
            <summary>
            Gets or sets the text displayed on Navigation Pane Customize menu item which shows fewer buttons.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.NavigationPaneLocalization.NavigationPaneOptions">
            <summary>
            Gets or sets the text displayed on Navigation Pane Customize menu item which displays the Options dialog.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.NavigationPaneLocalization.AddRemoveButtons">
            <summary>
            Gets or sets the text displayed on Navigation Pane Customize menu item which allows hiding/showing of navigation pane button.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.NavigationPaneLocalization.CollapsedPaneText">
            <summary>
            Gets or sets the text displayed on the content part of control when control is collapsed, default "Navigation Pane".
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.NavigationPaneLocalization.CustomizeDialogTitle">
            <summary>
            Gets or sets the title of Customize dialog.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.NavigationPaneLocalization.CustomizeDialogLabel">
            <summary>
            Gets or sets the text of customize dialog label.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.NavigationPaneLocalization.CustomizeDialogButtonMoveUp">
            <summary>
            Gets or sets the text of Customize Dialog Move Up button.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.NavigationPaneLocalization.CustomizeDialogButtonMoveDown">
            <summary>
            Gets or sets the text of Customize Dialog Move Down button.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.NavigationPaneLocalization.CustomizeDialogButtonReset">
            <summary>
            Gets or sets the text of Customize Dialog Reset button.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.NavigationPaneLocalization.CustomizeDialogButtonOk">
            <summary>
            Gets or sets the text of Customize Dialog OK button.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.NavigationPaneLocalization.CustomizeDialogButtonCancel">
            <summary>
            Gets or sets the text of Customize Dialog Cancel button.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.NavigationPanePanel.LargeItemsCountProperty">
            <summary>
            Identifies the LargeItems property.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.NavigationPanePanel.EnableCustomizationProperty">
            <summary>
            Identifies the EnableCustomization property.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.NavigationPanePanel.SmallItemsHeightProperty">
            <summary>
            Identifies the SmallItemsHeight property.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.NavigationPanePanel.SmallItemsBackgroundProperty">
            <summary>
            Identifies the SmallItemsBackground property.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.NavigationPanePanel.PaneExpandedProperty">
            <summary>
            Identifies the PaneExpanded property.
            </summary>
        </member>
        <member name="M:DevComponents.WpfRibbon.NavigationPanePanel.#ctor">
            <summary>
            Initializes a new instance of the NavigationPanePanel class.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.NavigationPanePanel.VisiblePaneItemCount">
            <summary>
            Gets the number of visible pane items.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.NavigationPanePanel.FirstVisible">
            <summary>
            Gets the reference to first visible pane item.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.NavigationPanePanel.SmallItemsHeight">
            <summary>
            Gets or sets the height of the items in the small display state.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.NavigationPanePanel.LargeItemsCount">
            <summary>
            Gets or sets the number of items displayed on the panel that are in large state.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.NavigationPanePanel.EnableCustomization">
            <summary>
            Gets or sets whether customization button which allows customization of the NavigationPane is visible.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.NavigationPanePanel.SmallItemsBackground">
            <summary>
            Gets or sets the small items line background brush.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.NavigationPanePanel.PaneExpanded">
            <summary>
            Gets or sets whether parent navigation pane is expanded. Do not change this property since it is automatically managed
            by control and is used for item styling.
            </summary>
        </member>
        <member name="T:DevComponents.WpfRibbon.NavigationPaneSplitter">
            <summary>
            Defines navigation pane splitter control.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.PaneItem.IsSelectedProperty">
            <summary>
            Gets or sets whether dock window is selected.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.PaneItem.ImageProperty">
            <summary>
            Indicates the image displayed on the item.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.PaneItem.ImageSourceProperty">
            <summary>
            Indicates the string based image source for the image displayed on the item.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.PaneItem.ImageSmallProperty">
            <summary>
            Indicates the small image displayed on the item when item is in reduced display state.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.PaneItem.ImageSmallSourceProperty">
            <summary>
            Indicates the string based image source for the small image displayed on the item when item is in reduced display state.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "F:DevComponents.WpfRibbon.PaneItem.TitleProperty" -->
        <!-- Badly formed XML comment ignored for member "F:DevComponents.WpfRibbon.PaneItem.SmallStateProperty" -->
        <member name="F:DevComponents.WpfRibbon.PaneItem.PaneExpandedProperty">
            <summary>
            Identifies the PaneExpanded property.
            </summary>
        </member>
        <member name="M:DevComponents.WpfRibbon.PaneItem.FocusContent">
            <summary>
            Sets the focus to the content of the control.
            </summary>
            <returns>Returns true if content has received input focus</returns>
        </member>
        <member name="P:DevComponents.WpfRibbon.PaneItem.IsSelected">
            <summary>
            Gets or sets whether Item is selected.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.PaneItem.Image">
            <summary>
            Gets or sets the image displayed on the item.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.PaneItem.ImageSource">
            <summary>
            Gets or sets the string that represents the image source that will be loaded and assigned to the Image property.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.PaneItem.ImageSmall">
            <summary>
            Gets or sets the small image variant displayed on the button when item is in reduced display state.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.PaneItem.ImageSmallSource">
            <summary>
            Gets or sets the string that represents the image source that will be loaded and assigned to the ImageSmall property.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.PaneItem.Title">
            <summary>
            Gets or sets the optional text that will be displayed in Navigation Panel title when this item is selected. If Title is not set
            the Header property value is displayed on Navigation Panel title bar.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.PaneItem.SmallState">
            <summary>
            Gets or sets whether item is in small display state which uses small image and does not display header.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.PaneItem.PaneExpanded">
            <summary>
            Gets or sets whether parent navigation pane is expanded. Do not change this property since it is automatically managed
            by control and is used for item styling.
            </summary>
        </member>
        <member name="M:DevComponents.WpfRibbon.ParentPopupControlImpl.OnButtonDropDownPreviewClick(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Called by parent PreviewClick event handler.
            </summary>
        </member>
        <member name="M:DevComponents.WpfRibbon.ParentPopupControlImpl.OnIsSelectedChanged(System.Object,System.Windows.RoutedPropertyChangedEventArgs{System.Boolean})">
            <summary>
            Called when child selected (popup) item managed by the control has changed.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="P:DevComponents.WpfRibbon.ParentPopupControlImpl.CurrentSelection">
            <summary>
            Gets or sets currently selected child
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.ParentPopupControlImpl.IsPopupMode">
            <summary>
            Gets or sets whether control is in popup mode.
            </summary>
        </member>
        <member name="T:DevComponents.WpfRibbon.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="T:DevComponents.WpfRibbon.Qat">
            <summary>
            Represents the Ribbon Quick Access Toolbar Control.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.Qat.IsOverflowItemProperty">
            <summary>
            Identifies the IsOverflowItem property.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.Qat.HasOverflowItemsProperty">
            <summary>
            Identifies the HasOverflowItems property.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.Qat.IsOverflowOpenProperty">
            <summary>
            Identifies the IsOverflowOpen property.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.Qat.IsAboveRibbonProperty">
            <summary>
            Identifies the IsAboveRibbon property.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.Qat.IsActiveProperty">
            <summary>
            Identifes IsActive property.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.Qat.IsGlassEnabledProperty">
            <summary>
            Identifies IsGlassEnabled property.
            </summary>
        </member>
        <member name="M:DevComponents.WpfRibbon.Qat.GetIsOverflowItem(System.Windows.DependencyObject)">
            <summary>
            Gets whether an item that is part of the QAT is in overflow state.
            </summary>
            <param name="element">Reference to the item that is part of the QAT</param>
            <returns>True if item is in overflow state, otherwise false</returns>
        </member>
        <member name="P:DevComponents.WpfRibbon.Qat.IsAboveRibbon">
            <summary>
            Gets whether Quick Access Toolbar is positioned above the ribbon control. Default value is true.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.Qat.HasOverflowItems">
            <summary>
            Gets whether Quick Access Toolbar has overflow items.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.Qat.IsOverflowOpen">
            <summary>
            Gets or sets whether overflow popup is open.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.Qat.IsActive">
            <summary>
            Gets or sets whether ribbon parent window is active. This property is provided for internal use by Ribbon Control and it should not be modified.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.Qat.IsGlassEnabled">
            <summary>
            Gets or sets whether glass support in background chrome is enabled.
            </summary>
        </member>
        <member name="T:DevComponents.WpfRibbon.QatBorder">
            <summary>
            Represents the Quick Access Toolbar border.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.QatBorder.BackgroundProperty">
            <summary>
            Identifies the Background property.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.QatBorder.BorderBrushProperty">
            <summary>
            Identifies the BorderBrush property.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.QatBorder.BorderThicknessProperty">
            <summary>
            Identifies the BorderThickness property.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.QatBorder.LightBorderBrushProperty">
            <summary>
            Identifies the LightBorderBrush property.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.QatBorder.PaddingProperty">
            <summary>
            Identifies the Padding property.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.QatBorder.IsBorderVisibleProperty">
            <summary>
            Identifies the IsBorderVisible property.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.QatBorder.IsBackgroundVisibleProperty">
            <summary>
            Identifies the IsBackgroundVisible property.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.QatBorder.Background">
            <summary>
            Gets or sets the background brush.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.QatBorder.BorderBrush">
            <summary>
            Gets or sets the border brush.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.QatBorder.LightBorderBrush">
            <summary>
            Gets or sets the light border brush used around the border.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.QatBorder.BorderThickness">
            <summary>
            Gets or sets the border thickness.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.QatBorder.Padding">
            <summary>
            Gets or sets the padding for the border content.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.QatBorder.IsBorderVisible">
            <summary>
            Gets or sets whether Quick Access Toolbar border is visible. Default value is true.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.QatBorder.IsBackgroundVisible">
            <summary>
            Gets or sets whether Quick Access Toolbar background is visible. Default value is true.
            </summary>
        </member>
        <member name="T:DevComponents.WpfRibbon.QatCustomizeButton">
            <summary>
            Represents the Quick Access Toolbar customize button that can be added to the Quick Access Toolbar to enable customization.
            </summary>
        </member>
        <member name="T:DevComponents.WpfRibbon.QatOverflowPanel">
            <summary>
            Represents the Quick Access Toolbar overflow panel.
            </summary>
        </member>
        <member name="T:DevComponents.WpfRibbon.QatPanel">
            <summary>
            Represents the panel used by Quick Access Toolbar.
            </summary>
        </member>
        <member name="T:DevComponents.WpfRibbon.Ribbon">
            <summary>
            Represents the Ribbon Control
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.Ribbon.VisualStyleProperty">
            <summary>
            Identifies the VisualStyle property.
            </summary>
        </member>
        <member name="M:DevComponents.WpfRibbon.Ribbon.GetVisualStyle(System.Windows.DependencyObject)">
            <summary>
            Gets the VisualStyle property value for specified object.
            </summary>
            <param name="target">Object to return value for.</param>
            <returns>Ribbon style.</returns>
        </member>
        <member name="M:DevComponents.WpfRibbon.Ribbon.SetVisualStyle(System.Windows.DependencyObject,DevComponents.WpfRibbon.eRibbonVisualStyle)">
            <summary>
            Sets the VisualStyle property on specified object.
            </summary>
            <param name="target">Target object.</param>
            <param name="value">Ribbon style value.</param>
        </member>
        <member name="F:DevComponents.WpfRibbon.Ribbon.EffectiveStyleProperty">
            <summary>
            Identifies EffectiveStyle property.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.Ribbon.AutoExpandProperty">
            <summary>
            Identifies the AutoExpand property.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.Ribbon.CanDialogCustomizeQatProperty">
            <summary>
            Identifies the CanDialogCustomizeQatProperty property.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.Ribbon.CanChangeQatPlacementProperty">
            <summary>
            Identifies the CanChangeQatPlacement property.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.Ribbon.IsRibbonMenuOpenProperty">
            <summary>
            Identifies the IsRibbonMenuOpen property.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.Ribbon.IsMinimizedProperty">
            <summary>
            Identifies the IsMinimized property.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.Ribbon.ApplicationMenuProperty">
            <summary>
            Gets or sets the application menu used by the Ribbon Control. Application menu is displayed on the top-left hand side of the control.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.Ribbon.QuickAccessToolbarProperty">
            <summary>
            Gets or sets the Quick Access Toolbar used by the Ribbon Control.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.Ribbon.IsQuickAccessToolbarBelowProperty">
            <summary>
            Identifies IsQuickAccessToolbarBelow property.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.Ribbon.WindowBorderThicknessProperty">
            <summary>
            Identifies the WindowBorderThickness property.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.Ribbon.HorizontalWindowBorderThicknessProperty">
            <summary>
            Identifies the HorizontalWindowBorderThickness property.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.Ribbon.SelectedContentProperty">
            <summary>
            Gets the content of the selected tab.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.Ribbon.ContextGroupsPropertyKey">
            <summary>
            Identifes the key for ContextGroups property.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.Ribbon.IsUsingGlassProperty">
            <summary>
            Identifies IsUsingGlass property.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.Ribbon.KeyTipProperty">
            <summary>
            Identifies the KeyTip attached property.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.Ribbon.IsCustomizableProperty">
            <summary>
            Identifies the IsCustomizable attached property.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.Ribbon.ElementRoleProperty">
            <summary>
            Identifies the ElementRole attached property.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.Ribbon.IsCustomizableContextSetProperty">
            <summary>
            Identifies the IsCustomizableContextSet attached property.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.Ribbon.UseSpecKeyTipPositioningProperty">
            <summary>
            Identifies the UseSpecKeyTipPositioning property.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.Ribbon.AutoHideRibbonContentProperty">
            <summary>
            Identifies the AutoHideRibbonContent property.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.Ribbon.AutoHideTriggerSizeProperty">
            <summary>
            Identifies the AutoHideTriggerSize property.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.Ribbon.SystemButtonsProperty">
            <summary>
            Identifies the SystemButtons Property.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.Ribbon.ToggleRibbonMinimize">
            <summary>
            Defines the routed command that toggles the IsMinimized property when Ctrl+F1 key is pressed.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.Ribbon.BeforeRemoveFromQatEvent">
            <summary>
            Identifies the BeforeRemoveFromQat event.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.Ribbon.AfterRemoveFromQatEvent">
            <summary>
            Identifies the AfterRemoveFromQat event.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.Ribbon.BeforeAddToQatEvent">
            <summary>
            Identifies the BeforeAddToQat event.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.Ribbon.AfterAddToQatEvent">
            <summary>
            Identifies the AfterAddToQat event.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.Ribbon.BeforeCustomizeQatDialogEvent">
            <summary>
            Identifies the BeforeCustomizeQatDialog event.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.Ribbon.AfterCustomizeQatDialogEvent">
            <summary>
            Identifies the AfterCustomizeQatDialog event.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.Ribbon.IsActiveProperty">
            <summary>
            Identifes IsActive property.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.Ribbon.LivePreviewEnabledProperty">
            <summary>
            Identifies the LivePreviewEnabled attached property.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.Ribbon.LivePreviewEvent">
            <summary>
            Identifies the LivePreview event.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.Ribbon.UndoLivePreviewEvent">
            <summary>
            Identifies the UndoLivePreview event.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.Ribbon.EnterLivePreviewEvent">
            <summary>
            Identifies the EnterLivePreview event.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.Ribbon.ExitLivePreviewEvent">
            <summary>
            Identifies the ExitLivePreview event.
            </summary>
        </member>
        <member name="M:DevComponents.WpfRibbon.Ribbon.SetupBindings">
            <summary>
            Setups Ribbon bindings used for toggling of Ribbon minimize etc.
            </summary>
        </member>
        <member name="M:DevComponents.WpfRibbon.Ribbon.ReleaseBindings">
            <summary>
            Releases Input Bindings create by ribbon control using SetupBindings method.
            </summary>
        </member>
        <member name="M:DevComponents.WpfRibbon.Ribbon.SetupWindowBinding(System.Windows.Window)">
            <summary>
            Setup the Ribbon Control Window Binding so the Window.IsActive property can be tracked and other window state properties. It is usually not
            necessary to call this method directly when ribbon control is hosted on the RibbonWindow.
            </summary>
            <param name="w">Reference to the window object.</param>
        </member>
        <member name="M:DevComponents.WpfRibbon.Ribbon.GetKeyTip(System.Windows.UIElement)">
            <summary>
            Gets the KeyTip assigned to the UI Element.
            </summary>
            <param name="element">Reference to the UI element</param>
            <returns>Return the KeyTip assigned to the element.</returns>
        </member>
        <member name="M:DevComponents.WpfRibbon.Ribbon.SetKeyTip(System.Windows.UIElement,System.String)">
            <summary>
            Assigns the KeyTip to the UI Element.
            </summary>
            <param name="element">Reference to the UI Element.</param>
            <param name="keytip">KeyTip to assign to UI element</param>
        </member>
        <member name="M:DevComponents.WpfRibbon.Ribbon.GetIsCustomizable(System.Windows.FrameworkElement)">
            <summary>
            Gets whether FrameworkElement is customizable inside of the Ribbon Control. Setting this value to true allows
            the ribbon control to show the context menu when element is right clicked and allows end user to add the
            element to the Quick Access Toolbar or open the ribbon customization dialog.
            </summary>
            <param name="element">Element to get value of customization property for.</param>
            <returns>true if customization is enabled otherwise false</returns>
        </member>
        <member name="M:DevComponents.WpfRibbon.Ribbon.SetIsCustomizable(System.Windows.FrameworkElement,System.Boolean)">
            <summary>
            Gets whether FrameworkElement is customizable inside of the Ribbon Control. Setting this value to true allows
            the ribbon control to show the context menu when element is right clicked and allows end user to add the
            element to the Quick Access Toolbar or open the ribbon customization dialog.
            </summary>
            <param name="element">Element to get value of customization property for.</param>
            <param name="value">true if customization is enabled otherwise false</param>
        </member>
        <member name="M:DevComponents.WpfRibbon.Ribbon.GetElementRole(System.Windows.FrameworkElement)">
            <summary>
            Gets the element role based on its position in ribbon interface.
            </summary>
            <param name="element">Element to get value for.</param>
            <returns>Element role</returns>
        </member>
        <member name="M:DevComponents.WpfRibbon.Ribbon.SetElementRole(System.Windows.FrameworkElement,DevComponents.WpfRibbon.eElementRole)">
            <summary>
            Sets the element role based on its position in ribbon interface.
            </summary>
            <param name="element">Element to assign role for.</param>
            <param name="value">Element role</param>
        </member>
        <member name="M:DevComponents.WpfRibbon.Ribbon.GetLivePreviewEnabled(System.Windows.FrameworkElement)">
            <summary>
            Gets whether LivePreview events are enabled for the given element. Automatic support for LivePreview events is provided for ButtonDropDown controls only.
            </summary>
            <param name="element">Element to get value of live preview property for.</param>
            <returns>true if live preview is enabled otherwise false</returns>
        </member>
        <member name="M:DevComponents.WpfRibbon.Ribbon.SetLivePreviewEnabled(System.Windows.FrameworkElement,System.Boolean)">
            <summary>
            Sets whether LivePreview events are enabled for the given element. Automatic support for LivePreview events is provided for ButtonDropDown controls only.
            </summary>
            <param name="element">Element to set value of live preview property for.</param>
            <param name="value">true if live preview is enabled otherwise false</param>
        </member>
        <member name="M:DevComponents.WpfRibbon.Ribbon.IsElementOnQat(System.Windows.FrameworkElement)">
            <summary>
            Returns whether an element is already on Quick Access Toolbar. This function works based on FrameworkElement.Name property to check whether an item is already on QAT or by comparing the Command assigned to the control.
            </summary>
            <param name="elem">Reference to an element.</param>
            <returns>True if element with given name is on QAT otherwise false</returns>
        </member>
        <member name="M:DevComponents.WpfRibbon.Ribbon.OnAfterCustomizeQatDialog(DevComponents.WpfRibbon.QatDialogEventArgs)">
            <summary>
            Raises the AfterCustomizeQatDialog event.
            </summary>
            <param name="e">Provides event data.</param>
        </member>
        <member name="M:DevComponents.WpfRibbon.Ribbon.OnBeforeCustomizeQatDialog(DevComponents.WpfRibbon.QatDialogEventArgs)">
            <summary>
            Raises the BeforeCustomizeQatDialog event.
            </summary>
            <param name="e">Provides event data.</param>
        </member>
        <member name="M:DevComponents.WpfRibbon.Ribbon.CreateQatItemCopy(System.Object)">
            <summary>
            Creates a copy of an element to be added to Quick Access Toolbar. Raises BeforeAddToQat event that you can use to provide custom
            copy of an element.
            </summary>
            <param name="element">Instance of ButtonDropDown or RibbonBar control.</param>
            <returns>Copy for QAT or null if copy cannot be created.</returns>
        </member>
        <member name="M:DevComponents.WpfRibbon.Ribbon.AddToQat(System.Object)">
            <summary>
            Add an ButtonDropDown or RibbonBar that is part of the Ribbon control to the Quick Access Toolbar. For any other control type you need
            to handle the BeforeAddToQat event and set the QatOperationAddEventArgs.ItemCopy property to a copy of the control that you wish added to the QAT.
            </summary>
            <param name="element">Element to add to the QAT. Automatically supported controls are ButtonDropDown and RibbonBar control.</param>
        </member>
        <member name="M:DevComponents.WpfRibbon.Ribbon.RemoveFromQat(System.Object)">
            <summary>
            Removes the Control from the Quick Access Toolbar. Control must be already memeber of the QuickAccessToolbar.Items collection.
            </summary>
            <param name="element">Control to remove.</param>
        </member>
        <member name="M:DevComponents.WpfRibbon.Ribbon.ChangeColorScheme(DevComponents.WpfRibbon.eRibbonVisualStyle)">
            <summary>
            Changes current ribbon color table. This method will work only if Application.Current has valid value.
            </summary>
            <param name="colorTable">Color table to change the scheme to.</param>
        </member>
        <member name="M:DevComponents.WpfRibbon.Ribbon.ChangeColorScheme(DevComponents.WpfRibbon.eRibbonVisualStyle,System.Windows.Media.Color)">
            <summary>
            Changes current ribbon color table. This method will work only if Application.Current has valid value.
            </summary>
            <param name="baseColorTable">Color table to use as basis for the new color scheme to be created.</param>
            <param name="baseColor">Base color to use to create new color table.</param>
        </member>
        <member name="M:DevComponents.WpfRibbon.Ribbon.CreateColorScheme(DevComponents.WpfRibbon.eRibbonVisualStyle,System.Windows.Media.Color)">
            <summary>
            Creates new ribbon color scheme based on the existing color table and single specified base color.
            </summary>
            <param name="baseColorTable">Color table identifier.</param>
            <param name="baseColor">Base color to use to create the new color scheme.</param>
            <returns>New ResourceDictionary object that you can merge into the application resources.</returns>
        </member>
        <member name="M:DevComponents.WpfRibbon.Ribbon.CreateColorSchemeResourceDictionary(DevComponents.WpfRibbon.eRibbonVisualStyle,System.Windows.Media.Color)">
            <summary>
            Creates new ribbon color scheme based on the existing color table and single specified base color.
            </summary>
            <param name="baseColorTable">Color table identifier.</param>
            <param name="baseColor">Base color to use to create the new color scheme.</param>
            <returns>New ResourceDictionary object that you can merge into the application resources.</returns>
        </member>
        <member name="M:DevComponents.WpfRibbon.Ribbon.SetColorScheme(DevComponents.WpfRibbon.eRibbonVisualStyle)">
            <summary>
            Changes current ribbon color table. This method will work only if Application.Current has valid value.
            </summary>
            <param name="colorTable">Color table to change the scheme to.</param>
        </member>
        <member name="M:DevComponents.WpfRibbon.Ribbon.SetColorScheme(DevComponents.WpfRibbon.eRibbonVisualStyle,System.Windows.Media.Color)">
            <summary>
            Changes current ribbon color table. This method will work only if Application.Current has valid value.
            </summary>
            <param name="baseColorTable">Color table to use as basis for the new color scheme to be created.</param>
            <param name="baseColor">Base color to use to create new color table.</param>
        </member>
        <member name="M:DevComponents.WpfRibbon.Ribbon.GetAllInstances(System.String)">
            <summary>
            Find all instances of ButtonDropDown control with given name.
            </summary>
            <param name="name">Name of button.</param>
            <returns>List containing buttons.</returns>
        </member>
        <member name="P:DevComponents.WpfRibbon.Ribbon.VisualStyle">
            <summary>
            Gets or sets the Ribbon style.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.Ribbon.EffectiveStyle">
            <summary>
            Gets the effective ribbon style.
            </summary>
        </member>
        <member name="E:DevComponents.WpfRibbon.Ribbon.BeforeCustomizeQatDialog">
            <summary>
            Occurs before Quick Access Toolbar customize dialog is shown.
            </summary>
        </member>
        <member name="E:DevComponents.WpfRibbon.Ribbon.AfterCustomizeQatDialog">
            <summary>
            Occurs after Quick Access Toolbar customize dialog is shown.
            </summary>
        </member>
        <member name="E:DevComponents.WpfRibbon.Ribbon.BeforeRemoveFromQat">
            <summary>
            Occurs before an item is removed from the Quick Access Toolbar and allows you to cancel the operation.
            </summary>
        </member>
        <member name="E:DevComponents.WpfRibbon.Ribbon.AfterRemoveFromQat">
            <summary>
            Occurs after an item has been removed from the Quick Access Toolbar. This action cannot be cancelled.
            </summary>
        </member>
        <member name="E:DevComponents.WpfRibbon.Ribbon.BeforeAddToQat">
            <summary>
            Occurs before an item is added to the Quick Access Toolbar and allows you to cancel the operation.
            If you are enabling addition of types other than ButtonDropDown and RibbonBar to Quick Access Toolbar you must handle
            this event and provide the copy of the item being added so it can be placed on the Quick Access Toolbar.
            </summary>
        </member>
        <member name="E:DevComponents.WpfRibbon.Ribbon.AfterAddToQat">
            <summary>
            Occurs after an item has been added to the Quick Access Toolbar. This action cannot be cancelled.
            </summary>
        </member>
        <member name="E:DevComponents.WpfRibbon.Ribbon.LivePreview">
            <summary>
            Occurs when Live Preview for an Gallery item is needed. You should also handle the UndoLivePreview event to restore the state before 
            LivePreview was activated.
            </summary>
        </member>
        <member name="E:DevComponents.WpfRibbon.Ribbon.UndoLivePreview">
            <summary>
            Occurs when Live Preview for an Gallery item is undone. This event will not occur if the button inside the gallery was clicked i.e. its
            action executed.
            </summary>
        </member>
        <member name="E:DevComponents.WpfRibbon.Ribbon.EnterLivePreview">
            <summary>
            Occurs before first LivePreview event is raised and indicates the start of the Live Preview operation.
            This event will be raised again only after ExitLivePreview event.
            </summary>
        </member>
        <member name="E:DevComponents.WpfRibbon.Ribbon.ExitLivePreview">
            <summary>
            Occurs after the mouse has left the container that is hosting Live Preview controls to indicate that Live Preview
            operation has ended. ExitLivePreview event will not be raised if live preview is applied through clicking of the Button.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.Ribbon.SystemButtons">
            <summary>
            Gets or sets whether form system buttons, title are visible within the ribbon. Default value is true. You can set this
            property to false to hide the system buttons if you are not using ribbon control on RibbonWindow.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.Ribbon.IsActive">
            <summary>
            Gets or sets whether ribbon parent window is active. This property is provided for internal use by Ribbon Control and it should not be modified.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.Ribbon.ApplicationMenu">
            <summary>
            Gets or sets the application menu used by the Ribbon Control. Application menu is displayed on the top-left hand side of the control.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.Ribbon.QuickAccessToolbar">
            <summary>
            Gets or sets the Quick Access Toolbar used by the Ribbon Control.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.Ribbon.IsQuickAccessToolbarBelow">
            <summary>
            Gets or sets whether Quick Access Toolbar is displayed below the ribbon control. Default value is false.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.Ribbon.WindowBorderThickness">
            <summary>
            Gets or sets the thickness of the window border that Ribbon control uses to leave the appropriate amount of space available 
            for window resizing. Only Left and Right thickness should be set.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.Ribbon.HorizontalWindowBorderThickness">
            <summary>
            Gets the horizontal thickness of the window border that Ribbon control uses to leave the appropriate amount of space available 
            for window resizing.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.Ribbon.SelectedContent">
            <summary>
            Gets the content of the selected tab.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.Ribbon.ContentTemplate">
            <summary>
            Gets or sets the data template used to display the content of the ContentControl. This is a dependency property. 
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.Ribbon.ContentTemplateSelector">
            <summary>
            Gets or sets a template selector that enables an application writer to provide custom template-selection logic. This is a dependency property. 
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.Ribbon.ContextGroups">
            <summary>
            Gets the reference to the collection of ContextGroups defined on the Ribbon.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.Ribbon.SystemText">
            <summary>
            Gets the reference to the ribbon localization object which holds all system text used by the component.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.Ribbon.AutoExpand">
            <summary>
            Gets or sets whether ribbon is automatically expanded collapsed when Ribbon Tab is double clicked. Default value is true.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.Ribbon.CanDialogCustomizeQat">
            <summary>
            Gets or sets whether Quick Access Toolbar can be customized through the Quick Access Toolbar Customization Dialog. Default value is true.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.Ribbon.CanChangeQatPlacement">
            <summary>
            Gets or sets whether Quick Access Toolbar placement can be changed. Default value is true.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.Ribbon.AutoHideRibbonContent">
            <summary>
            Gets or sets whether ribbon will hide its content when application window is resized at or below the size specified by the AutoHideTriggerSize property. Default value is true.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.Ribbon.AutoHideTriggerSize">
            <summary>
            Gets or sets the size of the application window at which ribbon will hide its content automatically to provide more space to display the document. Default value is 300, 250
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.Ribbon.UseSpecKeyTipPositioning">
            <summary>
            Gets or sets whether ribbon use Office 2007 UI Guidelines specification for Key Tips positioning on the RibbonBar controls. Default value is true.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.Ribbon.IsRibbonMenuOpen">
            <summary>
            Gets or sets whether ribbon popup menu that is available when ribbon is minimized is open or not.
            This property is effective only when ribbon is in minimized state.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.Ribbon.IsMinimized">
            <summary>
            Gets or sets whether ribbon is in minimized state. When in minimized state ribbon displays the selected tab content on popup instead of inline. Default
            value is false.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.Ribbon.IsUsingGlass">
            <summary>
            Gets whether control is using Windows Vista glass effect in its display.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.Ribbon.QuickAccessToolbarLayout">
            <summary>
            Gets or sets the Quick Access Toolbar layout description. You can use the value obtained from this property to save
            the customized Quick Access Toolbar into registry or into any other storage object. You can also set the saved layout description back
            to restore user customize layout.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.Ribbon.DefaultOffice2013ThemeSeed">
            <summary>
            Specifies default Office 2013 theme seed colors. Default value is Office2013ThemeSeed.Default
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.Ribbon.DefaultOffice2016ThemeSeed">
            <summary>
            Specifies default Office 2016 theme seed colors. Default value is Office2016ThemeSeed.Default
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.Ribbon.PopupAllowsTransparency">
            <summary>
            Gets the value that Popup controls are using for the AllowsTransparency property. Default value is true.
            </summary>
        </member>
        <member name="T:DevComponents.WpfRibbon.RibbonBackgroundChrome">
            <summary>
            Represents the ribbon background chrome.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.RibbonBackgroundChrome.VisualStyleProperty">
            <summary>
            Identifies VisualStyle property. VisualStyle should never be set on this control rather on Ribbon control only.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.RibbonBackgroundChrome.EffectiveStyleProperty">
            <summary>
            Identifies EffectiveStyle property.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.RibbonBackgroundChrome.QatRightPositionProperty">
            <summary>
            Identifies QatRightPosition property.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.RibbonBackgroundChrome.TitleChromeHeightProperty">
            <summary>
            Identifies TitleChromeHeight property.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.RibbonBackgroundChrome.IsActiveProperty">
            <summary>
            Identifies IsActive property.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.RibbonBackgroundChrome.WindowStateProperty">
            <summary>
            Identifies WindowState property.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.RibbonBackgroundChrome.CloseButtonVisibilityProperty">
            <summary>
            Identifies CloseButtonVisibility property.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.RibbonBackgroundChrome.RestoreButtonVisibilityProperty">
            <summary>
            Identifies RestoreButtonVisibility property.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.RibbonBackgroundChrome.MinimizeButtonVisibilityProperty">
            <summary>
            Identifies MinimizeButtonVisibility property.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.RibbonBackgroundChrome.MaximizeButtonVisibilityProperty">
            <summary>
            Identifies MaximizeButtonVisibility property.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.RibbonBackgroundChrome.WindowBorderThicknessProperty">
            <summary>
            Identifies the WindowBorderThickness property.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.RibbonBackgroundChrome.IsGlassEnabledProperty">
            <summary>
            Identifies IsGlassEnabled property.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.RibbonBackgroundChrome.SystemButtonsProperty">
            <summary>
            Identifies SystemButtons property.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.RibbonBackgroundChrome.TotalTitleChromeHeightProperty">
            <summary>
            Identifies the TotalTitleChromeHeight Property.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.RibbonBackgroundChrome.HorizontalWindowBorderThicknessProperty">
            <summary>
            Identifies the HorizontalWindowBorderThickness property.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.RibbonBackgroundChrome.VisualStyle">
            <summary>
            Gets or sets effective VisualStyle. Note that this property must be set on Ribbon control.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.RibbonBackgroundChrome.EffectiveStyle">
            <summary>
            Gets the effective ribbon style.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.RibbonBackgroundChrome.QatRightPosition">
            <summary>
            Indicates the right X position of the QAT toolbar. This property is provided for internal use by Ribbon Control and it should not be modified.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.RibbonBackgroundChrome.IsActive">
            <summary>
            Gets or sets whether parent window is active. This property is provided for internal use by Ribbon Control and it should not be modified.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.RibbonBackgroundChrome.WindowState">
            <summary>
            Gets the current parent window is window state. This property is provided for internal use by Ribbon Control and it should not be modified.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.RibbonBackgroundChrome.IsGlassEnabled">
            <summary>
            Gets or sets whether glass support in background chrome is enabled.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.RibbonBackgroundChrome.TitleChromeHeight">
            <summary>
            Gets or sets the height of the window title chrome.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.RibbonBackgroundChrome.TotalTitleChromeHeight">
            <summary>
            Gets total calculated height of the title chrome.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.RibbonBackgroundChrome.CloseButtonVisibility">
            <summary>
            Gets or sets whether window close button is visible.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.RibbonBackgroundChrome.RestoreButtonVisibility">
            <summary>
            Gets or sets whether window restore button is visible.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.RibbonBackgroundChrome.MinimizeButtonVisibility">
            <summary>
            Gets or sets whether window minimize button is visible.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.RibbonBackgroundChrome.MaximizeButtonVisibility">
            <summary>
            Gets or sets whether window maximize button is visible.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.RibbonBackgroundChrome.WindowBorderThickness">
            <summary>
            This property is used internally by the control. See Ribbon.WindowBorderThickness property which is for public usage.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.RibbonBackgroundChrome.HorizontalWindowBorderThickness">
            <summary>
            Gets the horizontal thickness of the window border that Ribbon control uses to leave the appropriate amount of space available 
            for window resizing.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.RibbonBackgroundChrome.SystemButtons">
            <summary>
            Gets or sets whether form system buttons, title are visible within the ribbon. Default value is true. You can set this
            property to false to hide the system buttons if you are not using ribbon control on RibbonWindow.
            </summary>
        </member>
        <member name="T:DevComponents.WpfRibbon.RibbonBarPanel">
            <summary>
            Represents the panel which hosts the RibbonBar control on single tab.
            </summary>
        </member>
        <member name="M:DevComponents.WpfRibbon.RibbonBarPanel.RestoreAllCollapsed">
            <summary>
            Restores all collapsed RibbonBar controls back to the normal state to allow you to manipulate the Children collection of the panel.
            </summary>
        </member>
        <member name="T:DevComponents.WpfRibbon.RibbonCommandManager">
            <summary>
            Provides methods to integrate the Ribbon with the standard system Routed Commands. The extender connects the WPF command to the ButtonDropDown the command is assigned to
            and it syncs the Header, Image, ImageSmall and IsChecked properties to all ButtonDropDown controls that use same command. You must connect the command extender
            to the system command using the RibbonCommandManager.Connect method and new instance of ButtonDropDownCommandExtender object.
            </summary>
        </member>
        <member name="M:DevComponents.WpfRibbon.RibbonCommandManager.Connect(System.Windows.Input.ICommand,DevComponents.WpfRibbon.IButtonDropDownCommandExtender)">
            <summary>
            Connects an application command to the an instance of ButtonDropDownCommandExtender. 
            </summary>
            <param name="command">Reference to the command.</param>
            <param name="extender">Reference to the ButtonDropDownCommandExtender</param>
        </member>
        <member name="M:DevComponents.WpfRibbon.RibbonCommandManager.Disconnect(System.Windows.Input.ICommand,DevComponents.WpfRibbon.IButtonDropDownCommandExtender)">
            <summary>
            Disconnects the command from ButtonDropDownCommandExtender.
            </summary>
            <param name="command">Reference to the command.</param>
            <param name="extender">Reference to the ButtonDropDownCommandExtender</param>
        </member>
        <member name="M:DevComponents.WpfRibbon.RibbonCommandManager.GetExender(System.Windows.Input.ICommand)">
            <summary>
            Gets the ButtonDropDownCommandExtender assigned to the command.
            </summary>
            <param name="command">Reference to the command.</param>
            <returns>Returns reference to the ButtonDropDownCommandExtender assigned to the command or null if there is no reference assigned.</returns>
        </member>
        <member name="M:DevComponents.WpfRibbon.RibbonCommandManager.ClearCommands">
            <summary>
            Clears all command/extender links.
            </summary>
        </member>
        <member name="T:DevComponents.WpfRibbon.RibbonContentPanel">
            <summary>
            Defines panel that is internally used by Ribbon control to position Application Menu, Quick Access Toolbar and ribbon tabs...
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.RibbonContentPanel.VisualStyleProperty">
            <summary>
            Identifies VisualStyle property. VisualStyle should never be set on this control rather on Ribbon control only.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.RibbonContentPanel.EffectiveStyleProperty">
            <summary>
            Identifies EffectiveStyle property.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.RibbonContentPanel.ContentPartProperty">
            <summary>
            Gets or sets the value that indicates the content part of the child item.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.RibbonContentPanel.WindowBorderThicknessProperty">
            <summary>
            Identifies the WindowBorderThickness property.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.RibbonContentPanel.IsGlassEnabledProperty">
            <summary>
            Identifies IsGlassEnabled property.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.RibbonContentPanel.IsVisibleAutoChangedProperty">
            <summary>
            Identifies the IsVisibleAutoChanged attached property.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.RibbonContentPanel.VisualStyle">
            <summary>
            Gets or sets effective VisualStyle. Note that this property must be set on Ribbon control.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.RibbonContentPanel.EffectiveStyle">
            <summary>
            Gets the effective ribbon style.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.RibbonContentPanel.WindowBorderThickness">
            <summary>
            This property is used internally by the control. See Ribbon.WindowBorderThickness property which is for public usage.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.RibbonContentPanel.IsGlassEnabled">
            <summary>
            Gets or sets whether glass support in background chrome is enabled.
            </summary>
        </member>
        <member name="T:DevComponents.WpfRibbon.RibbonBorder">
            <summary>
            Defines the Ribbon Border.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.RibbonBorder.IsRibbonPanel">
            <summary>
            Gets or sets whether decorator is used as the panel for the ribbon bar controls.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.RibbonBorder.InnerBorder">
            <summary>
            Gets or sets whether light border is always rendered as inner border.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.RibbonBorder.AutoAnimation">
            <summary>
            Gets or sets whether automatic fade animation provided by decorator is enabled. Default value is true.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.RibbonBorder.BorderThickness">
            <summary>
            Gets or sets the border thickness.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.RibbonBorder.LightBorderThickness">
            <summary>
            Gets or sets the border thickness.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.RibbonBorder.BorderState">
            <summary>
            Gets or sets the border rendering state. Rendering state change will cause the border to automatically pick the appropriate system colors from application resources.
            Default value is Normal.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.RibbonBorder.ColorClass">
            <summary>
            Gets or sets the color class for the border button. The color class is used to determine the colors that are automatically loaded from the application resources
            when the ButtonState property changes. Default value is RibbonColors.ButtonClass.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.RibbonBorder.CornerRadius">
            <summary>
            Gets or sets the borders corner radius.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.RibbonBorder.Background">
            <summary>
            Gets or sets the background brush.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.RibbonBorder.BorderBrush">
            <summary>
            Gets or sets the border brush.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.RibbonBorder.TopHighlight">
            <summary>
            Gets or sets the top background highlight brush.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.RibbonBorder.LightBorderBrush">
            <summary>
            Gets or sets the light border brush used around the border.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.RibbonBorder.Padding">
            <summary>
            Gets or sets the padding for the border content.
            </summary>
        </member>
        <member name="T:DevComponents.WpfRibbon.RibbonColors">
            <summary>
            Defines keys for the colors used by the Ribbon control.
            </summary>
        </member>
        <member name="T:DevComponents.WpfRibbon.RibbonLocalization">
            <summary>
            Represents the class that stores text used by ribbon control only for localization purposes.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.RibbonLocalization.QatDialogCaption">
            <summary>
            Gets or sets the title text of the Quick Access Toolbar Customize dialog form.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.RibbonLocalization.QatDialogPlacementCheckbox">
            <summary>
            Gets or sets the text of the "Place Quick Access Toolbar below the Ribbon" check-box on the Quick Access Toolbar Customize dialog form.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.RibbonLocalization.QatDialogCategoriesLabel">
            <summary>
            Gets or sets the text of the Choose commands from label on the Quick Access Toolbar Customize dialog form.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.RibbonLocalization.QatDialogRemoveButton">
            <summary>
            Gets or sets the text of the Remove button on the Quick Access Toolbar Customize dialog form.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.RibbonLocalization.QatDialogAddButton">
            <summary>
            Gets or sets the text of the Add button on the Quick Access Toolbar Customize dialog form.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.RibbonLocalization.QatDialogOkButton">
            <summary>
            Gets or sets the text of the OK button on the Quick Access Toolbar Customize dialog form.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.RibbonLocalization.QatDialogCancelButton">
            <summary>
            Gets or sets the text of the Cancel button on the Quick Access Toolbar Customize dialog form.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.RibbonLocalization.QatRemoveItemText">
            <summary>
            Gets or sets the text that is used on context menu used to customize Quick Access Toolbar.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.RibbonLocalization.QatAddItemText">
            <summary>
            Gets or sets the text that is used on context menu used to customize Quick Access Toolbar.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.RibbonLocalization.QatCustomizeText">
            <summary>
            Gets or sets the text that is used on context menu used to customize Quick Access Toolbar.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.RibbonLocalization.QatCustomizeMenuLabel">
            <summary>
            Gets or sets the text that is used on Quick Access Toolbar customize menu label.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.RibbonLocalization.QatPlaceBelowRibbonText">
            <summary>
            Gets or sets the text that is used on context menu used to change placement of the Quick Access Toolbar.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.RibbonLocalization.QatPlaceAboveRibbonText">
            <summary>
            Gets or sets the text that is used on context menu used to change placement of the Quick Access Toolbar.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.RibbonLocalization.MinimizeRibbonText">
            <summary>
            Gets or sets the text that is used on context menu item used to minimize the Ribbon.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.RibbonLocalization.MaximizeRibbonText">
            <summary>
            Gets or sets the text that is used on context menu item used to maximize the Ribbon.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.RibbonLocalization.QatMoreCommandsText">
            <summary>
            Gets or sets the text that is used on QAT Customize menu item used to open the Qat Customize Dialog.
            </summary>
        </member>
        <member name="T:DevComponents.WpfRibbon.RibbonTab">
            <summary>
            Represents the Ribbon Tab.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.RibbonTab.VisualStyleProperty">
            <summary>
            Identifies VisualStyle property. VisualStyle should never be set on this control rather on Ribbon control only.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.RibbonTab.EffectiveStyleProperty">
            <summary>
            Identifies EffectiveStyle property.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.RibbonTab.IsSelectedProperty">
            <summary>
            Gets or sets whether tab item is selected.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.RibbonTab.ContextGroupProperty">
            <summary>
            Identifes ContextGroup property.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.RibbonTab.ColorProperty">
            <summary>
            Identifes Color property.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.RibbonTab.TabColorProperty">
            <summary>
            Identifes Attached TabColor property which is set on child panel and RibbonBar controls and reflects current tab color.
            </summary>
        </member>
        <member name="M:DevComponents.WpfRibbon.RibbonTab.GetTabColor(System.Windows.UIElement)">
            <summary>
            Gets the color of the tab element belongs to.
            </summary>
            <param name="element">Reference to the UI element</param>
            <returns>Return the tab color assigned to the element.</returns>
        </member>
        <member name="M:DevComponents.WpfRibbon.RibbonTab.SetTabColor(System.Windows.UIElement,DevComponents.WpfRibbon.eRibbonTabColor)">
            <summary>
            Sets the color of the tab element belongs to.
            </summary>
            <param name="element">Reference to the UI Element.</param>
            <param name="tabColor">Tab color to assign to UI element</param>
        </member>
        <member name="P:DevComponents.WpfRibbon.RibbonTab.VisualStyle">
            <summary>
            Gets or sets effective VisualStyle. Note that this property must be set on Ribbon control.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.RibbonTab.EffectiveStyle">
            <summary>
            Gets the effective ribbon style.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.RibbonTab.ContextGroup">
            <summary>
            Gets or sets the reference to the Contextual Tab group tab belongs to.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.RibbonTab.Color">
            <summary>
            Gets or sets the stock color assigned to the ribbon tab which is used when tab is selected.
            </summary>
        </member>
        <member name="T:DevComponents.WpfRibbon.RibbonTabBorder">
            <summary>
            Defines the Ribbon Tab border.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.RibbonTabBorder.CornerSizeProperty">
            <summary>
            Identifies CornerSize property.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.RibbonTabBorder.BackgroundProperty">
            <summary>
            Identifies the Background property.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.RibbonTabBorder.BorderBrushProperty">
            <summary>
            Identifies the BorderBrush property.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.RibbonTabBorder.BorderInnerBrushProperty">
            <summary>
            Identifies the BorderInnerBrush property.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.RibbonTabBorder.BorderOuterBrushProperty">
            <summary>
            Identifies the BorderOuterBrush property.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.RibbonTabBorder.PaddingProperty">
            <summary>
            Identifies the Padding property.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.RibbonTabBorder.TabStateProperty">
            <summary>
            Identifies the TabState property.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.RibbonTabBorder.ColorClassProperty">
            <summary>
            Identifies the ColorClass property.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.RibbonTabBorder.CornerSize">
            <summary>
            Gets or sets the tab corner size. Default value is 3.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.RibbonTabBorder.Padding">
            <summary>
            Gets or sets the padding for the border content.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:DevComponents.WpfRibbon.RibbonTabBorder.Background" -->
        <member name="P:DevComponents.WpfRibbon.RibbonTabBorder.BorderBrush">
            <summary>
            Gets or sets the border brush.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.RibbonTabBorder.BorderInnerBrush">
            <summary>
            Gets or sets the inner border brush.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.RibbonTabBorder.BorderOuterBrush">
            <summary>
            Gets or sets the outer border brush.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.RibbonTabBorder.ColorClass">
            <summary>
            Gets or sets the color class for the tab. The color class is used to determine the colors that are automatically loaded from the application resources
            when the TabState property changes. Default value is RibbonColors.RibbonTabClass.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.RibbonTabBorder.TabState">
            <summary>
            Gets or sets the tab rendering state.
            </summary>
        </member>
        <member name="T:DevComponents.WpfRibbon.RibbonTabPanel">
            <summary>
            Represents the panel for the ribbon tabs.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.RibbonTabPanel.PanelAlignmentProperty">
            <summary>
            Gets or sets the value that indicates the alignment the child item.
            </summary>
        </member>
        <member name="T:DevComponents.WpfRibbon.RibbonWindow">
            <summary>
            Represents a Window that should be used with the Ribbon Control.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.RibbonWindow.EffectiveStyleProperty">
            <summary>
            Identifies EffectiveStyle property.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.RibbonWindow.EnableGlassProperty">
            <summary>
            Identifies the EnableGlass Property.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.RibbonWindow.IsUsingGlassProperty">
            <summary>
            Identifies IsUsingGlass property.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.RibbonWindow.CustomChromeEnabledProperty">
            <summary>
            Identifies CustomChromeEnabled property.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.RibbonWindow.EffectiveStyle">
            <summary>
            Gets the effective ribbon style.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.RibbonWindow.CustomChromeEnabled">
            <summary>
            Gets or sets whether custom chrome functionality of RibbonWindow is enabled. Default value is true.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.RibbonWindow.RibbonControl">
            <summary>
            Gets or sets the ribbon control that is used on the window. The ribbon control reference is automatically managed and should not be changed by developer.
            Ribbon control reference is necessary for effective Windows Vista Glass support.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.RibbonWindow.EnableGlass">
            <summary>
            Gets or sets whether Ribbon Window glass support is enabled when running on Windows Vista with Glass. Default value is true.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.RibbonWindow.IsUsingGlass">
            <summary>
            Gets whether control is using Windows Vista glass effect in its display.
            </summary>
        </member>
        <member name="T:DevComponents.WpfRibbon.SuperToolTip">
            <summary>
            Represents the Ribbon style Super ToolTip Control.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.SuperToolTip.HeaderProperty">
            <summary>
            Identifies the Header property.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.SuperToolTip.HeaderTemplateProperty">
            <summary>
            Gets or sets the template used to display the contents of the control's header.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.SuperToolTip.HasHeaderProperty">
            <summary>
            Identifes the HasHeader Property.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.SuperToolTip.HeaderTemplateSelectorProperty">
            <summary>
            Identifies the HeaderTemplateSelector Property.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.SuperToolTip.FooterProperty">
            <summary>
            Identifies the Footer property.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.SuperToolTip.FooterTemplateProperty">
            <summary>
            Gets or sets the template used to display the contents of the control's footer.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.SuperToolTip.FooterImageProperty">
            <summary>
            Identifies the FooterImage property.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.SuperToolTip.HasFooterProperty">
            <summary>
            Identifes the HasFooter Property.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.SuperToolTip.FooterTemplateSelectorProperty">
            <summary>
            Identifies the FooterTemplateSelector Property.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.SuperToolTip.Header">
            <summary>
            Gets or sets the content for the Super ToolTip Header.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.SuperToolTip.HeaderTemplate">
            <summary>
            Gets or sets the template used to display the content of the Super ToolTip Header. 
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.SuperToolTip.HeaderTemplateSelector">
            <summary>
            Gets or sets the DataTemplateSelector that provides logic to select the template to use to display the Super ToolTip Header.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.SuperToolTip.HasHeader">
            <summary>
            Gets whether Super Tooltip has header assigned.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.SuperToolTip.FooterImage">
            <summary>
            Gets or sets the image displayed inside of Super ToolTip footer.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.SuperToolTip.Footer">
            <summary>
            Gets or sets the content of the Super ToolTip footer.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.SuperToolTip.FooterTemplate">
            <summary>
            Gets or sets the template used to display the content of the Super ToolTip footer. 
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.SuperToolTip.FooterTemplateSelector">
            <summary>
            Gets or sets the DataTemplateSelector that provides logic to select the template to use to display the Super ToolTip Footer.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.SuperToolTip.HasFooter">
            <summary>
            Gets whether Super Tooltip has footer assigned.
            </summary>
        </member>
        <member name="T:DevComponents.WpfRibbon.themes.BlackSkin">
            <summary>
            BlackSkin
            </summary>
        </member>
        <member name="M:DevComponents.WpfRibbon.themes.BlackSkin.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:DevComponents.WpfRibbon.themes.BlueSkin">
            <summary>
            BlueSkin
            </summary>
        </member>
        <member name="M:DevComponents.WpfRibbon.themes.BlueSkin.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:DevComponents.WpfRibbon.themes.CommonStyles">
            <summary>
            CommonStyles
            </summary>
        </member>
        <member name="M:DevComponents.WpfRibbon.themes.CommonStyles.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:DevComponents.WpfRibbon.themes.CrumbBarOffice2007BlackScheme">
            <summary>
            Represents Office 2007 Black CrumbBar color scheme resource dictionary.
            </summary>
            <summary>
            CrumbBarOffice2007BlackScheme
            </summary>
        </member>
        <member name="M:DevComponents.WpfRibbon.themes.CrumbBarOffice2007BlackScheme.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:DevComponents.WpfRibbon.themes.CrumbBarOffice2007BlueScheme">
            <summary>
            Represents Office 2007 Blue CrumbBar color scheme resource dictionary.
            </summary>
            <summary>
            CrumbBarOffice2007BlueScheme
            </summary>
        </member>
        <member name="M:DevComponents.WpfRibbon.themes.CrumbBarOffice2007BlueScheme.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:DevComponents.WpfRibbon.themes.CrumbBarOffice2007SilverScheme">
            <summary>
            Represents Office 2007 Silver CrumbBar color scheme resource dictionary.
            </summary>
            <summary>
            CrumbBarOffice2007SilverScheme
            </summary>
        </member>
        <member name="M:DevComponents.WpfRibbon.themes.CrumbBarOffice2007SilverScheme.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:DevComponents.WpfRibbon.themes.CrumbBarVistaScheme">
            <summary>
            Represents default CrumbBar Vista color scheme resource dictionary.
            </summary>
            <summary>
            CrumbBarVistaScheme
            </summary>
        </member>
        <member name="M:DevComponents.WpfRibbon.themes.CrumbBarVistaScheme.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:DevComponents.WpfRibbon.themes.GraySkin">
            <summary>
            GraySkin
            </summary>
        </member>
        <member name="M:DevComponents.WpfRibbon.themes.GraySkin.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:DevComponents.WpfRibbon.themes.Office2010BlackColorScheme">
            <summary>
            Office2010BlackColorScheme
            </summary>
        </member>
        <member name="M:DevComponents.WpfRibbon.themes.Office2010BlackColorScheme.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:DevComponents.WpfRibbon.themes.Office2010BlueColorScheme">
            <summary>
            Office2010BlueColorScheme
            </summary>
        </member>
        <member name="M:DevComponents.WpfRibbon.themes.Office2010BlueColorScheme.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:DevComponents.WpfRibbon.themes.Office2010SilverColorScheme">
            <summary>
            Office2010SilverColorScheme
            </summary>
        </member>
        <member name="M:DevComponents.WpfRibbon.themes.Office2010SilverColorScheme.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:DevComponents.WpfRibbon.themes.Office2013Theme">
            <summary>
            Office2013Theme
            </summary>
        </member>
        <member name="M:DevComponents.WpfRibbon.themes.Office2013Theme.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.themes.Office2013Theme.CanvasColor">
            <summary>
            Gets or sets the base canvas color, like form background.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.themes.Office2013Theme.TextColor">
            <summary>
            Gets or sets the text color displayed over the canvas color.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.themes.Office2013Theme.TextInactiveColor">
            <summary>
            Gets or sets the lighter text color used for example for inactive non selected tab text etc.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.themes.Office2013Theme.TextDisabledColor">
            <summary>
            Gets or sets the text color used for disabled text.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.themes.Office2013Theme.CanvasDarkColor">
            <summary>
            Gets or sets the color that is in darker shade off of the canvas color.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.themes.Office2013Theme.CanvasLightColor">
            <summary>
            Gets or sets the color that is in light shade off of the canvas color.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.themes.Office2013Theme.CanavasLighterColor">
            <summary>
            Gets or sets the color that is in lighter shade off of the canvas color.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.themes.Office2013Theme.BaseColor">
            <summary>
            Gets or sets the chrome base color, used for window border, selection marking etc.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.themes.Office2013Theme.BaseTextColor">
            <summary>
            Gets or sets the text color for text displayed over the BaseColor.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.themes.Office2013Theme.BaseLightColor">
            <summary>
            Gets or sets the light base color shade.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.themes.Office2013Theme.BaseLighterColor">
            <summary>
            Gets or sets the light base color shade.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.themes.Office2013Theme.BaseLightestColor">
            <summary>
            Gets or sets the lightest base color shade.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.themes.Office2013Theme.BaseLight1Color">
            <summary>
            Gets or sets the light base color shade.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.themes.Office2013Theme.BaseLightTextColor">
            <summary>
            Gets or sets the light base color shade.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.themes.Office2013Theme.BaseDarkColor">
            <summary>
            Gets or sets the dark base color shade.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.themes.Office2013Theme.BaseDarkerColor">
            <summary>
            Gets or sets the darker base color shade.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.themes.Office2013Theme.ComplementColor">
            <summary>
            Gets or sets the complement color.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.themes.Office2013Theme.ComplementLightColor">
            <summary>
            Gets or sets the light complement color.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.themes.Office2013Theme.ComplementDarkColor">
            <summary>
            Gets or sets the dark complement color.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.themes.Office2013Theme.ComplementDarkerColor">
            <summary>
            Gets or sets the darker complement color.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.themes.Office2013Theme.ComplementTextColor">
            <summary>
            Gets or sets the light complement color.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.themes.Office2013Theme.ComplementLightTextColor">
            <summary>
            Gets or sets the light complement color.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.themes.Office2013Theme.CanvasGradientStartColor">
            <summary>
            Gets or sets the off base color button gradient start.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.themes.Office2013Theme.CanvasGradientEndColor">
            <summary>
            Gets or sets the off base color button gradient start.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.themes.Office2013Theme.RibbonBarBackgroundColor">
            <summary>
            Gets or sets the color that is in light shade off of the canvas color.
            </summary>
        </member>
        <member name="T:DevComponents.WpfRibbon.themes.Office2016Theme">
            <summary>
            Office2016Theme
            </summary>
        </member>
        <member name="M:DevComponents.WpfRibbon.themes.Office2016Theme.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.themes.Office2016Theme.CanvasColor">
            <summary>
            Gets or sets the base canvas color, like form background.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.themes.Office2016Theme.TextColor">
            <summary>
            Gets or sets the text color displayed over the canvas color.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.themes.Office2016Theme.TextInactiveColor">
            <summary>
            Gets or sets the lighter text color used for example for inactive non selected tab text etc.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.themes.Office2016Theme.TextDisabledColor">
            <summary>
            Gets or sets the text color used for disabled text.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.themes.Office2016Theme.CanvasDarkColor">
            <summary>
            Gets or sets the color that is in darker shade off of the canvas color.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.themes.Office2016Theme.CanvasDarker1Color">
            <summary>
            Gets or sets the color that is in even darker shade off of the canvas color.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.themes.Office2016Theme.CanvasDarker2Color">
            <summary>
            Gets or sets the color that is in even darker shade off of the canvas color.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:DevComponents.WpfRibbon.themes.Office2016Theme.CanvasDarker3Color" -->
        <member name="P:DevComponents.WpfRibbon.themes.Office2016Theme.CanvasLightColor">
            <summary>
            Gets or sets the color that is in light shade off of the canvas color.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.themes.Office2016Theme.CanavasLighterColor">
            <summary>
            Gets or sets the color that is in lighter shade off of the canvas color.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.themes.Office2016Theme.BaseColor">
            <summary>
            Gets or sets the chrome base color, used for window border, selection marking etc.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.themes.Office2016Theme.BaseTextColor">
            <summary>
            Gets or sets the text color for text displayed over the BaseColor.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.themes.Office2016Theme.BaseLightColor">
            <summary>
            Gets or sets the light base color shade.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.themes.Office2016Theme.BaseLighterColor">
            <summary>
            Gets or sets the light base color shade.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.themes.Office2016Theme.BaseLightestColor">
            <summary>
            Gets or sets the lightest base color shade.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.themes.Office2016Theme.BaseLight1Color">
            <summary>
            Gets or sets the light base color shade.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.themes.Office2016Theme.BaseLightTextColor">
            <summary>
            Gets or sets the light base color shade.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.themes.Office2016Theme.BaseDarkColor">
            <summary>
            Gets or sets the dark base color shade.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.themes.Office2016Theme.BaseDarkerColor">
            <summary>
            Gets or sets the darker base color shade.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.themes.Office2016Theme.ComplementColor">
            <summary>
            Gets or sets the complement color.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.themes.Office2016Theme.ComplementLightColor">
            <summary>
            Gets or sets the light complement color.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.themes.Office2016Theme.ComplementDarkColor">
            <summary>
            Gets or sets the dark complement color.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.themes.Office2016Theme.ComplementDarkerColor">
            <summary>
            Gets or sets the darker complement color.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.themes.Office2016Theme.ComplementTextColor">
            <summary>
            Gets or sets the light complement color.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.themes.Office2016Theme.ComplementLightTextColor">
            <summary>
            Gets or sets the light complement color.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.themes.Office2016Theme.CanvasGradientStartColor">
            <summary>
            Gets or sets the off base color button gradient start.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.themes.Office2016Theme.CanvasGradientEndColor">
            <summary>
            Gets or sets the off base color button gradient start.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.themes.Office2016Theme.RibbonBarBackgroundColor">
            <summary>
            Gets or sets the color that is in light shade off of the canvas color.
            </summary>
        </member>
        <member name="T:DevComponents.WpfRibbon.TitlePanel">
            <summary>
            Represents the ribbon title panel.
            </summary>
        </member>
        <member name="M:DevComponents.WpfRibbon.TitlePanel.#ctor">
            <summary>
            Initializes a new instance of the TitlePanel class.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.TitlePanel.QatRightPosition">
            <summary>
            Indicates the right X position of the QAT toolbar. This property is provided for internal use by Ribbon Control and it should not be modified.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.TitlePanel.TitleChromeHeight">
            <summary>
            Gets or sets the height of the window title chrome.
            </summary>
        </member>
        <member name="M:DevComponents.WpfRibbon.Utility.ContainsName(System.Collections.IEnumerable,System.String)">
            <summary>
            Gets whether collection contains FrameworkElement with given name.
            </summary>
            <param name="items">Collection of FrameworkElement object.</param>
            <param name="name">Name of control to look for</param>
            <returns>true if collection contains element with given name otherwise false</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:DevComponents.WpfRibbon.Utility.IndexOfName(System.Collections.IList,System.String)" -->
        <member name="T:DevComponents.WpfRibbon.WinApi.WS">
            <summary>
            WindowStyle values, WS_*
            </summary>
        </member>
        <member name="T:DevComponents.WpfRibbon.WinApi.WindowHitTestRegions">
            <summary>Options available when a form is tested for mose positions.</summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.WinApi.WindowHitTestRegions.Error">
            <summary>HTERROR: On the screen background or on a dividing line between windows 
            (same as HTNOWHERE, except that the DefWindowProc function produces a system 
            beep to indicate an error).</summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.WinApi.WindowHitTestRegions.TransparentOrCovered">
            <summary>HTTRANSPARENT: In a window currently covered by another window in the 
            same thread (the message will be sent to underlying windows in the same thread 
            until one of them returns a code that is not HTTRANSPARENT).</summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.WinApi.WindowHitTestRegions.NoWhere">
            <summary>HTNOWHERE: On the screen background or on a dividing line between 
            windows.</summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.WinApi.WindowHitTestRegions.ClientArea">
            <summary>HTCLIENT: In a client area.</summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.WinApi.WindowHitTestRegions.TitleBar">
            <summary>HTCAPTION: In a title bar.</summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.WinApi.WindowHitTestRegions.SystemMenu">
            <summary>HTSYSMENU: In a window menu or in a Close button in a child window.</summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.WinApi.WindowHitTestRegions.GrowBox">
            <summary>HTGROWBOX: In a size box (same as HTSIZE).</summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.WinApi.WindowHitTestRegions.Menu">
            <summary>HTMENU: In a menu.</summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.WinApi.WindowHitTestRegions.HorizontalScrollBar">
            <summary>HTHSCROLL: In a horizontal scroll bar.</summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.WinApi.WindowHitTestRegions.VerticalScrollBar">
            <summary>HTVSCROLL: In the vertical scroll bar.</summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.WinApi.WindowHitTestRegions.MinimizeButton">
            <summary>HTMINBUTTON: In a Minimize button. </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.WinApi.WindowHitTestRegions.MaximizeButton">
            <summary>HTMAXBUTTON: In a Maximize button.</summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.WinApi.WindowHitTestRegions.LeftSizeableBorder">
            <summary>HTLEFT: In the left border of a resizable window (the user can click 
            the mouse to resize the window horizontally).</summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.WinApi.WindowHitTestRegions.RightSizeableBorder">
            <summary>HTRIGHT: In the right border of a resizable window (the user can click 
            the mouse to resize the window horizontally).</summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.WinApi.WindowHitTestRegions.TopSizeableBorder">
            <summary>HTTOP: In the upper-horizontal border of a window.</summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.WinApi.WindowHitTestRegions.TopLeftSizeableCorner">
            <summary>HTTOPLEFT: In the upper-left corner of a window border.</summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.WinApi.WindowHitTestRegions.TopRightSizeableCorner">
            <summary>HTTOPRIGHT: In the upper-right corner of a window border.</summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.WinApi.WindowHitTestRegions.BottomSizeableBorder">
            <summary>HTBOTTOM: In the lower-horizontal border of a resizable window (the 
            user can click the mouse to resize the window vertically).</summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.WinApi.WindowHitTestRegions.BottomLeftSizeableCorner">
            <summary>HTBOTTOMLEFT: In the lower-left corner of a border of a resizable 
            window (the user can click the mouse to resize the window diagonally).</summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.WinApi.WindowHitTestRegions.BottomRightSizeableCorner">
            <summary>HTBOTTOMRIGHT: In the lower-right corner of a border of a resizable 
            window (the user can click the mouse to resize the window diagonally).</summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.WinApi.WindowHitTestRegions.NonSizableBorder">
            <summary>HTBORDER: In the border of a window that does not have a sizing 
            border.</summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.WinApi.WindowHitTestRegions.Object">
            <summary>HTOBJECT: Unknown...No Documentation Found</summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.WinApi.WindowHitTestRegions.CloseButton">
            <summary>HTCLOSE: In a Close button.</summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.WinApi.WindowHitTestRegions.HelpButton">
            <summary>HTHELP: In a Help button.</summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.WinApi.WindowHitTestRegions.SizeBox">
            <summary>HTSIZE: In a size box (same as HTGROWBOX). (Same as GrowBox).</summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.WinApi.WindowHitTestRegions.ReduceButton">
            <summary>HTREDUCE: In a Minimize button. (Same as MinimizeButton).</summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.WinApi.WindowHitTestRegions.ZoomButton">
            <summary>HTZOOM: In a Maximize button. (Same as MaximizeButton).</summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.WinApi.MF.DOES_NOT_EXIST">
            <summary>
            Possible return value for EnableMenuItem
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.WinApi.SC.F_ISSECURE">
            <summary>
            SCF_ISSECURE
            </summary>
        </member>
        <member name="T:DevComponents.WpfRibbon.WinApi.GWL">
            <summary>
            GetWindowLongPtr values, GWL_*
            </summary>
        </member>
        <member name="T:DevComponents.WpfRibbon.WinApi.SW">
            <summary>
            ShowWindow options
            </summary>
        </member>
        <member name="T:DevComponents.WpfRibbon.WindowBorder">
            <summary>
            Represents the root Ribbon Window Border.
            </summary>
        </member>
        <member name="F:DevComponents.WpfRibbon.WindowBorder.TransparentMarginProperty">
            <summary>
            Identifies the TransparentMargin Property.
            </summary>
        </member>
        <member name="P:DevComponents.WpfRibbon.WindowBorder.TransparentMargin">
            <summary>
            Gets or sets the margin of the transparent fill that is applied to the border content.
            </summary>
        </member>
        <member name="T:XamlGeneratedNamespace.GeneratedInternalTypeHelper">
            <summary>
            GeneratedInternalTypeHelper
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.CreateInstance(System.Type,System.Globalization.CultureInfo)">
            <summary>
            CreateInstance
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.GetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Globalization.CultureInfo)">
            <summary>
            GetPropertyValue
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.SetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Object,System.Globalization.CultureInfo)">
            <summary>
            SetPropertyValue
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.CreateDelegate(System.Type,System.Object,System.String)">
            <summary>
            CreateDelegate
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.AddEventHandler(System.Reflection.EventInfo,System.Object,System.Delegate)">
            <summary>
            AddEventHandler
            </summary>
        </member>
    </members>
</doc>
